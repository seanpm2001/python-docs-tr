{">>>": {"title": ">>>", "body": "<main>\n<dd><p>Etkile\u015fimli kabu\u011fun varsay\u0131lan Python istemi. Genellikle yorumlay\u0131c\u0131da etkile\u015fimli olarak y\u00fcr\u00fct\u00fclebilen kod \u00f6rnekleri i\u00e7in g\u00f6r\u00fcl\u00fcr.</p>\n</dd>\n</main>\n"}, "...": {"title": "...", "body": "<main>\n<dd><p>\u015eunlara ba\u015fvurabilir:</p>\n<ul class=\"simple\">\n<li><p>Girintili bir kod blo\u011fu i\u00e7in kod girerken, e\u015fle\u015fen bir \u00e7ift sol ve sa\u011f s\u0131n\u0131rlay\u0131c\u0131 (parantez, k\u00f6\u015feli parantez, ka\u015fl\u0131 ayra\u00e7 veya \u00fc\u00e7l\u00fc t\u0131rnak) i\u00e7indeyken veya bir dekorat\u00f6r belirttikten sonra etkile\u015fimli kabu\u011fun varsay\u0131lan Python istemi.</p></li>\n<li><p><code class=\"xref py py-const docutils literal notranslate\"><span class=\"pre\">Elipsis</span></code> yerle\u015fik sabiti.</p></li>\n</ul>\n</dd>\n</main>\n"}, "2to3": {"title": "2to3", "body": "<main>\n<dd><p>Kayna\u011f\u0131 ayr\u0131\u015ft\u0131rarak ve ayr\u0131\u015ft\u0131rma a\u011fac\u0131nda gezinerek tespit edilebilecek uyumsuzluklar\u0131n \u00e7o\u011funu i\u015fleyerek Python 2.x kodunu Python 3.x koduna d\u00f6n\u00fc\u015ft\u00fcrmeye \u00e7al\u0131\u015fan bir ara\u00e7.</p>\n<p>2to3, standart k\u00fct\u00fcphanede <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lib2to3';</span> <span class=\"pre\">ba\u011f\u0131ms\u0131z</span> <span class=\"pre\">bir</span> <span class=\"pre\">giri\u015f</span> <span class=\"pre\">noktas\u0131</span> <span class=\"pre\">\u015fu</span> <span class=\"pre\">\u015fekilde</span> <span class=\"pre\">sa\u011flan\u0131r:file:`Tools/scripts/2to3</span></code>. Bak\u0131n\u0131z <a class=\"reference internal\" href=\"library/2to3.html#to3-reference\"><span class=\"std std-ref\">2to3 \u2014 Automated Python 2 to 3 code translation</span></a>.</p>\n</dd>\n</main>\n"}, "soyut temel s\u0131n\u0131f": {"title": "soyut temel s\u0131n\u0131f", "body": "<main>\n<dd><p>Soyut temel s\u0131n\u0131flar <a class=\"reference internal\" href=\"#term-duck-typing\"><span class=\"xref std std-term\">duck-typing</span></a> \u2018i, <a class=\"reference internal\" href=\"library/functions.html#hasattr\" title=\"hasattr\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">hasattr()</span></code></a> gibi di\u011fer teknikler beceriksiz veya tamamen yanl\u0131\u015f oldu\u011funda aray\u00fczleri tan\u0131mlaman\u0131n bir yolunu sa\u011flayarak tamamlar (\u00f6rne\u011fin <a class=\"reference internal\" href=\"reference/datamodel.html#special-lookup\"><span class=\"std std-ref\">sihirli y\u00f6ntemlerle</span></a>).  ABC\u2019ler, bir s\u0131n\u0131ftan miras almayan ancak yine de <a class=\"reference internal\" href=\"library/functions.html#isinstance\" title=\"isinstance\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">isinstance()</span></code></a> ve <a class=\"reference internal\" href=\"library/functions.html#issubclass\" title=\"issubclass\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">issubclass()</span></code></a> taraf\u0131ndan tan\u0131nan s\u0131n\u0131flar olan sanal alt s\u0131n\u0131flar\u0131 tan\u0131t\u0131r; <a class=\"reference internal\" href=\"library/abc.html#module-abc\" title=\"abc: Abstract base classes according to :pep:`3119`.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abc</span></code></a> mod\u00fcl belgelerine bak\u0131n.  Python comes with many built-in ABCs for data structures (in the <a class=\"reference internal\" href=\"library/collections.abc.html#module-collections.abc\" title=\"collections.abc: Abstract base classes for containers\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections.abc</span></code></a> module), numbers (in the <a class=\"reference internal\" href=\"library/numbers.html#module-numbers\" title=\"numbers: Numeric abstract base classes (Complex, Real, Integral, etc.).\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">numbers</span></code></a> module), streams (in the <a class=\"reference internal\" href=\"library/io.html#module-io\" title=\"io: Core tools for working with streams.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code></a> module), import finders and loaders (in the <a class=\"reference internal\" href=\"library/importlib.html#module-importlib.abc\" title=\"importlib.abc: Abstract base classes related to import\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.abc</span></code></a> module).  <a class=\"reference internal\" href=\"library/abc.html#module-abc\" title=\"abc: Abstract base classes according to :pep:`3119`.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abc</span></code></a> mod\u00fcl\u00fc ile kendi ABC\u2019lerinizi olu\u015fturabilirsiniz.</p>\n</dd>\n</main>\n"}, "dipnot": {"title": "dipnot", "body": "<main>\n<dd><p>Bir de\u011fi\u015fkenle, bir s\u0131n\u0131f niteli\u011fiyle veya bir fonksiyon parametresiyle veya bir d\u00f6n\u00fc\u015f de\u011feriyle ili\u015fkilendirilen, gelenek olarak <a class=\"reference internal\" href=\"#term-type-hint\"><span class=\"xref std std-term\">type hint</span></a> bi\u00e7iminde kullan\u0131lan bir etiket.</p>\n<p>Yerel de\u011fi\u015fkenlerin a\u00e7\u0131klamalar\u0131na \u00e7al\u0131\u015fma zaman\u0131nda eri\u015filemez, ancak global de\u011fi\u015fkenlerin, s\u0131n\u0131f niteliklerinin ve i\u015flevlerin a\u00e7\u0131klamalar\u0131, s\u0131ras\u0131yla mod\u00fcllerin, s\u0131n\u0131flar\u0131n ve i\u015flevlerin <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">__annotations__</span></code> \u00f6zel \u00f6zelli\u011finde saklan\u0131r.</p>\n<p>Bu i\u015flevi a\u00e7\u0131klayan <a class=\"reference internal\" href=\"#term-variable-annotation\"><span class=\"xref std std-term\">variable annotation</span></a>, <a class=\"reference internal\" href=\"#term-function-annotation\"><span class=\"xref std std-term\">function annotation</span></a>, <span class=\"target\" id=\"index-77\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0484/\"><strong>PEP 484</strong></a> ve <span class=\"target\" id=\"index-78\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0526/\"><strong>PEP 526</strong></a>\u2019e bak\u0131n. Ek a\u00e7\u0131klamalarla \u00e7al\u0131\u015fmaya ili\u015fkin en iyi uygulamalar i\u00e7in ayr\u0131ca bkz. <a class=\"reference internal\" href=\"howto/annotations.html#annotations-howto\"><span class=\"std std-ref\">Annotations Best Practices</span></a>.</p>\n</dd>\n</main>\n"}, "arg\u00fcman": {"title": "arg\u00fcman", "body": "<main>\n<dd><p>Fonksiyon \u00e7a\u011fr\u0131l\u0131rken bir <a class=\"reference internal\" href=\"#term-function\"><span class=\"xref std std-term\">function</span></a> \u2018a (veya <a class=\"reference internal\" href=\"#term-method\"><span class=\"xref std std-term\">method</span></a>) ge\u00e7irilen bir de\u011fer. \u0130ki t\u00fcr arg\u00fcman vard\u0131r:</p>\n<ul>\n<li><p><em class=\"dfn\">keyword argument</em>: bir i\u015flev \u00e7a\u011fr\u0131s\u0131nda bir tan\u0131mlay\u0131c\u0131n\u0131n (\u00f6r. <code class=\"docutils literal notranslate\"><span class=\"pre\">ad=</span></code>) \u00f6n\u00fcne ge\u00e7en veya bir s\u00f6zl\u00fckte <code class=\"docutils literal notranslate\"><span class=\"pre\">**</span></code> ile ba\u015flayan bir de\u011fer olarak ge\u00e7irilen bir arg\u00fcman.  \u00d6rne\u011fin, <code class=\"docutils literal notranslate\"><span class=\"pre\">3</span></code> ve <code class=\"docutils literal notranslate\"><span class=\"pre\">5</span></code>, a\u015fa\u011f\u0131daki <a class=\"reference internal\" href=\"library/functions.html#complex\" title=\"complex\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">complex()</span></code></a>: \u00e7a\u011fr\u0131lar\u0131nda anahtar kelimenin arg\u00fcmanleridir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"n\">real</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">imag</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s1\">&#39;real&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;imag&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n</pre></div>\n</div>\n</li>\n<li><p><em class=\"dfn\">positional argument</em>: anahtar kelime arg\u00fcman\u0131 olmayan bir arg\u00fcman. Konumsal arg\u00fcmanler, bir arg\u00fcman listesinin ba\u015f\u0131nda g\u00f6r\u00fcnebilir ve/veya <code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code> ile ba\u015flayan bir <a class=\"reference internal\" href=\"#term-iterable\"><span class=\"xref std std-term\">iterable</span></a> \u00f6\u011fesinin \u00f6\u011feleri olarak iletilebilir. \u00d6rne\u011fin, <code class=\"docutils literal notranslate\"><span class=\"pre\">3</span></code> ve <code class=\"docutils literal notranslate\"><span class=\"pre\">5</span></code>, a\u015fa\u011f\u0131daki \u00e7a\u011fr\u0131larda konumsal arg\u00fcmanlerdir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"nb\">complex</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</li>\n</ul>\n<p>Arg\u00fcmanler, bir fonksiyon g\u00f6vdesindeki adland\u0131r\u0131lm\u0131\u015f yerel de\u011fi\u015fkenlere atan\u0131r. Bu atamay\u0131 y\u00f6neten kurallar i\u00e7in <a class=\"reference internal\" href=\"reference/expressions.html#calls\"><span class=\"std std-ref\">Calls</span></a> b\u00f6l\u00fcm\u00fcne bak\u0131n. S\u00f6zdizimsel olarak, bir arg\u00fcman\u0131 temsil etmek i\u00e7in herhangi bir ifade kullan\u0131labilir; de\u011ferlendirilen de\u011fer yerel de\u011fi\u015fkene atan\u0131r.</p>\n<p>Ayr\u0131ca <a class=\"reference internal\" href=\"#term-parameter\"><span class=\"xref std std-term\">parameter</span></a> s\u00f6zl\u00fc\u011f\u00fc giri\u015fine, <a class=\"reference internal\" href=\"faq/programming.html#faq-argument-vs-parameter\"><span class=\"std std-ref\">the difference between arguments and parameters</span></a> hakk\u0131ndaki SSS sorusuna ve <span class=\"target\" id=\"index-79\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0362/\"><strong>PEP 362</strong></a> \u2018ye bak\u0131n.</p>\n</dd>\n</main>\n"}, "asenkron ba\u011flam y\u00f6neticisi": {"title": "asenkron ba\u011flam y\u00f6neticisi", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"reference/compound_stmts.html#async-with\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">with</span></code></a> ifadesinde g\u00f6r\u00fclen ortam\u0131 <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__aenter__()</span></code> ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__aexit__()</span></code> y\u00f6ntemlerini tan\u0131mlayarak kontrol eden bir nesne.  <span class=\"target\" id=\"index-80\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a> de anlat\u0131ld\u0131.</p>\n</dd>\n</main>\n"}, "asenkron jenerat\u00f6r": {"title": "asenkron jenerat\u00f6r", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"#term-asynchronous-generator-iterator\"><span class=\"xref std std-term\">asynchronous generator iterator</span></a> d\u00f6nd\u00fcren bir i\u015flev.  Bir <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">for</span></code></a> d\u00f6ng\u00fcs\u00fcnde kullan\u0131labilen bir dizi de\u011fer \u00fcretmek i\u00e7in <a class=\"reference internal\" href=\"reference/simple_stmts.html#yield\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">yield</span></code></a> ifadeleri i\u00e7ermesi d\u0131\u015f\u0131nda <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-def\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code></a> ile tan\u0131mlanm\u0131\u015f bir e\u015fyordam i\u015flevine benziyor.</p>\n<p>Genellikle bir asenkron \u00fcrete\u00e7 i\u015flevine at\u0131fta bulunur, ancak baz\u0131 ba\u011flamlarda bir <em>asynchronous generator iterator</em> \u2018e kar\u015f\u0131l\u0131k gelebilir.  Ama\u00e7lanan anlam\u0131n net olmad\u0131\u011f\u0131 durumlarda, tam terimlerin kullan\u0131lmas\u0131 belirsizli\u011fi \u00f6nler.</p>\n<p>Bir asenkron \u00fcretici fonksiyonu, <a class=\"reference internal\" href=\"reference/expressions.html#await\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">await</span></code></a> ifadelerinin yan\u0131 s\u0131ra <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">for</span></code></a> ve <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-with\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">with</span></code></a> ifadeleri i\u00e7erebilir.</p>\n</dd>\n</main>\n"}, "asenkron jenerat\u00f6r yineleyici": {"title": "asenkron jenerat\u00f6r yineleyici", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-asynchronous-generator\"><span class=\"xref std std-term\">asynchronous generator</span></a> i\u015flevi taraf\u0131ndan olu\u015fturulan bir nesne.</p>\n<p>Bu, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__anext__()</span></code> y\u00f6ntemi kullan\u0131larak \u00e7a\u011fr\u0131ld\u0131\u011f\u0131nda, bir sonraki <a class=\"reference internal\" href=\"reference/simple_stmts.html#yield\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">yield</span></code></a> ifadesine kadar asynchronous generator i\u015flevinin g\u00f6vdesini y\u00fcr\u00fctecek, beklenebilir bir nesne d\u00f6nd\u00fcren bir <a class=\"reference internal\" href=\"#term-asynchronous-iterator\"><span class=\"xref std std-term\">asynchronous iterator</span></a>.</p>\n<p>Her <a class=\"reference internal\" href=\"reference/simple_stmts.html#yield\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">yield</span></code></a>, konum y\u00fcr\u00fctme durumunu hat\u0131rlayarak (yerel de\u011fi\u015fkenler ve bekleyen try ifadeleri dahil) i\u015flemeyi ge\u00e7ici olarak ask\u0131ya al\u0131r. <em>asynchronous generator iterator</em>, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__anext__()</span></code> taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen ba\u015fka birbeklenebilir ile etkili bir \u015fekilde devam etti\u011finde, kald\u0131\u011f\u0131 yerden devam eder. Bkz. <span class=\"target\" id=\"index-81\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a> ve <span class=\"target\" id=\"index-82\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0525/\"><strong>PEP 525</strong></a>.</p>\n</dd>\n</main>\n"}, "e\u015fzamans\u0131z yinelenebilir": {"title": "e\u015fzamans\u0131z yinelenebilir", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">for</span></code></a> ifadesinde kullan\u0131labilen bir nesne. <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__aiter__()</span></code> y\u00f6nteminden bir <a class=\"reference internal\" href=\"#term-asynchronous-iterator\"><span class=\"xref std std-term\">asynchronous iterator</span></a> d\u00f6nd\u00fcrmelidir.  <span class=\"target\" id=\"index-83\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a> \u2018de tan\u0131t\u0131ld\u0131.</p>\n</dd>\n</main>\n"}, "asenkron yineleyici": {"title": "asenkron yineleyici", "body": "<main>\n<dd><p><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__aiter__()</span></code> ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__anext__()</span></code> y\u00f6ntemlerini uygulayan bir nesne.  <code class=\"docutils literal notranslate\"><span class=\"pre\">__anext__</span></code> bir <a class=\"reference internal\" href=\"#term-awaitable\"><span class=\"xref std std-term\">awaitable</span></a> nesnesi d\u00f6nd\u00fcrmelidir. <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">for</span></code></a>, bir asenkron yineleyicinin <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__anext__()</span></code> y\u00f6ntemi taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen beklenebilirleri bir <a class=\"reference internal\" href=\"library/exceptions.html#StopAsyncIteration\" title=\"StopAsyncIteration\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">StopAsyncIteration</span></code></a> istisnas\u0131 olu\u015fturana kadar \u00e7\u00f6zer.  <span class=\"target\" id=\"index-84\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a> \u2018de a\u00e7\u0131kland\u0131.</p>\n</dd>\n</main>\n"}, "nitelik": {"title": "nitelik", "body": "<main>\n<dd><p>Noktal\u0131 ifadeler kullan\u0131larak ad\u0131yla ba\u015fvurulan bir nesneyle ili\u015fkili de\u011fer.  \u00d6rne\u011fin, <em>o</em> nesnesinin <em>a</em> \u00f6zniteli\u011fi varsa, bu nesneye <em>o.a</em> olarak ba\u015fvurulur.</p>\n<p>Bir nesneye, e\u011fer nesne izin veriyorsa, \u00f6rne\u011fin <a class=\"reference internal\" href=\"library/functions.html#setattr\" title=\"setattr\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">setattr()</span></code></a> kullanarak, ad\u0131 <a class=\"reference internal\" href=\"reference/lexical_analysis.html#identifiers\"><span class=\"std std-ref\">Identifiers and keywords</span></a> taraf\u0131ndan tan\u0131mland\u0131\u011f\u0131 gibi tan\u0131mlay\u0131c\u0131 olmayan bir \u00f6znitelik vermek m\u00fcmk\u00fcnd\u00fcr. B\u00f6yle bir \u00f6zniteli\u011fe noktal\u0131 bir ifade kullan\u0131larak eri\u015filemez ve bunun yerine <a class=\"reference internal\" href=\"library/functions.html#getattr\" title=\"getattr\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">getattr()</span></code></a> ile al\u0131nmas\u0131 gerekir.</p>\n</dd>\n</main>\n"}, "beklenebilir": {"title": "beklenebilir", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"reference/expressions.html#await\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">await</span></code></a> ifadesinde kullan\u0131labilen bir nesne.  Bir <a class=\"reference internal\" href=\"#term-coroutine\"><span class=\"xref std std-term\">coroutine</span></a> veya <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__await__()</span></code> y\u00f6ntemine sahip bir nesne olabilir. Ayr\u0131ca bak\u0131n\u0131z <span class=\"target\" id=\"index-85\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a>.</p>\n</dd>\n</main>\n"}, "bdfl": {"title": "BDFL", "body": "<main>\n<dd><p>Benevolent Dictator For Life, nam\u0131 di\u011fer <a class=\"reference external\" href=\"https://gvanrossum.github.io/\">Guido van Rossum</a>, Python\u2019un yarat\u0131c\u0131s\u0131.</p>\n</dd>\n</main>\n"}, "ikili dosya": {"title": "ikili dosya", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-file-object\"><span class=\"xref std std-term\">dosya nesnesi</span></a> <a class=\"reference internal\" href=\"#term-bytes-like-object\"><span class=\"xref std std-term\">bayt benzeri nesneler</span></a> okuyabilir ve yazabilir. \u0130kili dosya \u00f6rnekleri, ikili modda a\u00e7\u0131lan dosyalard\u0131r (<code class=\"docutils literal notranslate\"><span class=\"pre\">'rb'</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">'wb'</span></code> veya <code class=\"docutils literal notranslate\"><span class=\"pre\">'rb+'</span></code>), <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.stdin.buffer</span></code>, <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.stdout.buffer</span></code> ve <a class=\"reference internal\" href=\"library/io.html#io.BytesIO\" title=\"io.BytesIO\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">io.BytesIO</span></code></a> ve <a class=\"reference internal\" href=\"library/gzip.html#gzip.GzipFile\" title=\"gzip.GzipFile\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">gzip.GzipFile</span></code></a> \u00f6rnekleri.</p>\n<p>Ayr\u0131ca <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a> nesnelerini okuyabilen ve yazabilen bir dosya nesnesi i\u00e7in <a class=\"reference internal\" href=\"#term-text-file\"><span class=\"xref std std-term\">text file</span></a> \u2018a bak\u0131n.</p>\n</dd>\n</main>\n"}, "\u00f6d\u00fcn\u00e7 al\u0131nan referans": {"title": "\u00f6d\u00fcn\u00e7 al\u0131nan referans", "body": "<main>\n<dd><p>Python\u2019un C API \u2018sinde \u00f6d\u00fcn\u00e7 al\u0131nan referans, bir nesneye yap\u0131lan bir referanst\u0131r. Nesne referans say\u0131s\u0131n\u0131 de\u011fi\u015ftirmez. Nesne yok edilirse sarkan bir i\u015faret\u00e7i olur. \u00d6rne\u011fin, bir \u00e7\u00f6p toplama, nesneye yap\u0131lan son <a class=\"reference internal\" href=\"#term-strong-reference\"><span class=\"xref std std-term\">strong reference</span></a> kald\u0131rabilir ve b\u00f6ylece onu yok edebilir.</p>\n<p><a class=\"reference internal\" href=\"#term-borrowed-reference\"><span class=\"xref std std-term\">borrowed reference</span></a> \u00fczerinde <a class=\"reference internal\" href=\"c-api/refcounting.html#c.Py_INCREF\" title=\"Py_INCREF\"><code class=\"xref c c-func docutils literal notranslate\"><span class=\"pre\">Py_INCREF()</span></code></a> \u00e7a\u011f\u0131rmak, nesnenin \u00f6d\u00fcn\u00e7 al\u0131nan\u0131n son kullan\u0131m\u0131ndan \u00f6nce yok edilemedi\u011fi durumlar d\u0131\u015f\u0131nda, onu yerinde bir <a class=\"reference internal\" href=\"#term-strong-reference\"><span class=\"xref std std-term\">strong reference</span></a> \u2018a d\u00f6n\u00fc\u015ft\u00fcrmek i\u00e7in tavsiye edilir. referans. <a class=\"reference internal\" href=\"c-api/refcounting.html#c.Py_NewRef\" title=\"Py_NewRef\"><code class=\"xref c c-func docutils literal notranslate\"><span class=\"pre\">Py_NewRef()</span></code></a> i\u015flevi, yeni bir <a class=\"reference internal\" href=\"#term-strong-reference\"><span class=\"xref std std-term\">strong reference</span></a> olu\u015fturmak i\u00e7in kullan\u0131labilir.</p>\n</dd>\n</main>\n"}, "bayt benzeri nesne": {"title": "bayt benzeri nesne", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"c-api/buffer.html#bufferobjects\"><span class=\"std std-ref\">Buffer Protocol</span></a> \u2018i destekleyen ve bir C-<a class=\"reference internal\" href=\"#term-contiguous\"><span class=\"xref std std-term\">contiguous</span></a> arabelle\u011fini d\u0131\u015fa aktarabilen bir nesne. Bu, t\u00fcm <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a>, <a class=\"reference internal\" href=\"library/stdtypes.html#bytearray\" title=\"bytearray\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytearray</span></code></a> ve <a class=\"reference internal\" href=\"library/array.html#array.array\" title=\"array.array\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">array.array</span></code></a> nesnelerinin yan\u0131 s\u0131ra bir\u00e7ok yayg\u0131n <a class=\"reference internal\" href=\"library/stdtypes.html#memoryview\" title=\"memoryview\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">memoryview</span></code></a> nesnesini i\u00e7erir.  Bayt benzeri nesneler, ikili verilerle \u00e7al\u0131\u015fan \u00e7e\u015fitli i\u015flemler i\u00e7in kullan\u0131labilir; bunlara s\u0131k\u0131\u015ft\u0131rma, ikili dosyaya kaydetme ve bir soket \u00fczerinden g\u00f6nderme dahildir.</p>\n<p>Baz\u0131 i\u015flemler, de\u011fi\u015fken olmas\u0131 i\u00e7in ikili verilere ihtiya\u00e7 duyar.  Belgeler genellikle bunlara \u201cokuma-yazma bayt benzeri nesneler\u201d olarak at\u0131fta bulunur. \u00d6rnek de\u011fi\u015ftirilebilir arabellek nesneleri <a class=\"reference internal\" href=\"library/stdtypes.html#bytearray\" title=\"bytearray\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytearray</span></code></a> ve bir <a class=\"reference internal\" href=\"library/stdtypes.html#bytearray\" title=\"bytearray\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytearray</span></code></a> <a class=\"reference internal\" href=\"library/stdtypes.html#memoryview\" title=\"memoryview\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">memoryview</span></code></a> i\u00e7erir. Di\u011fer i\u015flemler, ikili verilerin de\u011fi\u015fmez nesnelerde (\u201csalt okunur bayt benzeri nesneler\u201d) depolanmas\u0131n\u0131 gerektirir; bunlar\u0131n \u00f6rnekleri aras\u0131nda <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a> ve bir <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a> nesnesinin <a class=\"reference internal\" href=\"library/stdtypes.html#memoryview\" title=\"memoryview\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">memoryview</span></code></a> bulunur.</p>\n</dd>\n</main>\n"}, "bayt kodu": {"title": "bayt kodu", "body": "<main>\n<dd><p>Python kaynak kodu, bir Python program\u0131n\u0131n CPython yorumlay\u0131c\u0131s\u0131ndaki dahili temsili olan bayt kodunda derlenir.  Bayt kodu ayr\u0131ca <code class=\"docutils literal notranslate\"><span class=\"pre\">.pyc</span></code> dosyalar\u0131nda \u00f6nbelle\u011fe al\u0131n\u0131r, b\u00f6ylece ayn\u0131 dosyan\u0131n ikinci kez \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 daha h\u0131zl\u0131 olur (kaynaktan bayt koduna yeniden derleme \u00f6nlenebilir).  Bu \u201cara dilin\u201d, her bir bayt koduna kar\u015f\u0131l\u0131k gelen makine kodunu y\u00fcr\u00fcten bir <a class=\"reference internal\" href=\"#term-virtual-machine\"><span class=\"xref std std-term\">sanal makine</span></a> \u00fczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131 s\u00f6ylenir. Bayt kodlar\u0131n\u0131n farkl\u0131 Python sanal makineleri aras\u0131nda \u00e7al\u0131\u015fmas\u0131 veya Python s\u00fcr\u00fcmleri aras\u0131nda kararl\u0131 olmas\u0131 beklenmedi\u011fini unutmay\u0131n.</p>\n<p>Bayt kodu talimatlar\u0131n\u0131n bir listesi <a class=\"reference internal\" href=\"library/dis.html#bytecodes\"><span class=\"std std-ref\">Python Bytecode Instructions</span></a> dok\u00fcman\u0131nda bulunabilir.</p>\n</dd>\n</main>\n"}, "\u00e7a\u011f\u0131r\u0131labilir": {"title": "\u00e7a\u011f\u0131r\u0131labilir", "body": "<main>\n<dd><p>Bir \u00e7a\u011fr\u0131labilir, muhtemelen bir dizi arg\u00fcmanla (bkz. <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">argument</span></a>) ve a\u015fa\u011f\u0131daki s\u00f6zdizimiyle \u00e7a\u011fr\u0131labilen bir nesnedir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">argument1</span><span class=\"p\">,</span> <span class=\"n\">argument2</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Bir <a class=\"reference internal\" href=\"#term-function\"><span class=\"xref std std-term\">fonksiyon</span></a> ve uzant\u0131s\u0131 olarak bir <a class=\"reference internal\" href=\"#term-method\"><span class=\"xref std std-term\">metot</span></a> bir \u00e7a\u011fr\u0131labilirdir. <a class=\"reference internal\" href=\"reference/datamodel.html#object.__call__\" title=\"object.__call__\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__call__()</span></code></a> y\u00f6ntemini uygulayan bir s\u0131n\u0131f \u00f6rne\u011fi de bir \u00e7a\u011fr\u0131labilirdir.</p>\n</dd>\n</main>\n"}, "geri \u00e7a\u011f\u0131rmak": {"title": "geri \u00e7a\u011f\u0131rmak", "body": "<main>\n<dd><p>Gelecekte bir noktada y\u00fcr\u00fct\u00fclecek bir arg\u00fcman olarak iletilen bir alt program i\u015flevi.</p>\n</dd>\n</main>\n"}, "s\u0131n\u0131f": {"title": "s\u0131n\u0131f", "body": "<main>\n<dd><p>Kullan\u0131c\u0131 tan\u0131ml\u0131 nesneler olu\u015fturmak i\u00e7in bir \u015fablon. S\u0131n\u0131f tan\u0131mlar\u0131 normalde s\u0131n\u0131f\u0131n \u00f6rnekleri \u00fczerinde \u00e7al\u0131\u015fan y\u00f6ntem tan\u0131mlar\u0131n\u0131 i\u00e7erir.</p>\n</dd>\n</main>\n"}, "s\u0131n\u0131f de\u011fi\u015fkeni": {"title": "s\u0131n\u0131f de\u011fi\u015fkeni", "body": "<main>\n<dd><p>Bir s\u0131n\u0131fta tan\u0131mlanm\u0131\u015f ve yaln\u0131zca s\u0131n\u0131f d\u00fczeyinde (yani s\u0131n\u0131f\u0131n bir \u00f6rne\u011finde de\u011fil) de\u011fi\u015ftirilmesi ama\u00e7lanan bir de\u011fi\u015fken.</p>\n</dd>\n</main>\n"}, "karma\u015f\u0131k say\u0131": {"title": "karma\u015f\u0131k say\u0131", "body": "<main>\n<dd><p>T\u00fcm say\u0131lar\u0131n bir reel k\u0131s\u0131m ve bir sanal k\u0131s\u0131m toplam\u0131 olarak ifade edildi\u011fi bilinen ger\u00e7ek say\u0131 sisteminin bir uzant\u0131s\u0131.  Hayali say\u0131lar, hayali birimin ger\u00e7ek katlar\u0131d\u0131r (<code class=\"docutils literal notranslate\"><span class=\"pre\">-1</span></code> \u2018in karek\u00f6k\u00fc), genellikle matematikte <code class=\"docutils literal notranslate\"><span class=\"pre\">i</span></code> veya m\u00fchendislikte <code class=\"docutils literal notranslate\"><span class=\"pre\">j</span></code> ile yaz\u0131l\u0131r.  Python, bu son g\u00f6sterimle yaz\u0131lan karma\u015f\u0131k say\u0131lar i\u00e7in yerle\u015fik deste\u011fe sahiptir; hayali k\u0131s\u0131m bir <code class=\"docutils literal notranslate\"><span class=\"pre\">j</span></code> son ekiyle yaz\u0131l\u0131r, \u00f6rne\u011fin <code class=\"docutils literal notranslate\"><span class=\"pre\">3+1j</span></code>.  <a class=\"reference internal\" href=\"library/math.html#module-math\" title=\"math: Mathematical functions (sin() etc.).\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code></a> mod\u00fcl\u00fcn\u00fcn karma\u015f\u0131k e\u015f de\u011ferlerine eri\u015fmek i\u00e7in <a class=\"reference internal\" href=\"library/cmath.html#module-cmath\" title=\"cmath: Mathematical functions for complex numbers.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code></a> kullan\u0131n.  Karma\u015f\u0131k say\u0131lar\u0131n kullan\u0131m\u0131 olduk\u00e7a geli\u015fmi\u015f bir matematiksel \u00f6zelliktir. Onlara olan ihtiyac\u0131n fark\u0131nda de\u011filseniz, onlar\u0131 g\u00fcvenle g\u00f6rmezden gelebilece\u011finiz neredeyse kesindir.</p>\n</dd>\n</main>\n"}, "ba\u011flam y\u00f6neticisi": {"title": "ba\u011flam y\u00f6neticisi", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"reference/compound_stmts.html#with\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">with</span></code></a> ifadesinde g\u00f6r\u00fclen ortam\u0131 <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__enter__()</span></code> ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__exit__()</span></code> y\u00f6ntemlerini tan\u0131mlayarak kontrol eden bir nesne. Bak\u0131n\u0131z <span class=\"target\" id=\"index-86\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0343/\"><strong>PEP 343</strong></a>.</p>\n</dd>\n</main>\n"}, "ba\u011flam de\u011fi\u015fkeni": {"title": "ba\u011flam de\u011fi\u015fkeni", "body": "<main>\n<dd><p>Ba\u011flam\u0131na ba\u011fl\u0131 olarak farkl\u0131 de\u011ferler alabilen bir de\u011fi\u015fken. Bu, her y\u00fcr\u00fctme i\u015f par\u00e7ac\u0131\u011f\u0131n\u0131n bir de\u011fi\u015fken i\u00e7in farkl\u0131 bir de\u011fere sahip olabilece\u011fi Thread-Local Storage\u2019a benzer. Bununla birlikte, ba\u011flam de\u011fi\u015fkenleriyle, bir y\u00fcr\u00fctme i\u015f par\u00e7ac\u0131\u011f\u0131nda birka\u00e7 ba\u011flam olabilir ve ba\u011flam de\u011fi\u015fkenlerinin ana kullan\u0131m\u0131, e\u015fzamanl\u0131 zaman uyumsuz g\u00f6revlerde de\u011fi\u015fkenleri izlemektir. Bak\u0131n\u0131z <a class=\"reference internal\" href=\"library/contextvars.html#module-contextvars\" title=\"contextvars: Context Variables\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextvars</span></code></a>.</p>\n</dd>\n</main>\n"}, "biti\u015fik": {"title": "biti\u015fik", "body": "<main>\n<dd><p id=\"index-10\">Bir arabellek, <em>C-biti\u015fik</em> veya <em>Fortran biti\u015fik</em> ise tam olarak biti\u015fik olarak kabul edilir.  S\u0131f\u0131r boyutlu arabellekler C ve Fortran biti\u015fiktir.  Tek boyutlu dizilerde, \u00f6\u011feler s\u0131f\u0131rdan ba\u015flayarak artan dizinler s\u0131ras\u0131na g\u00f6re bellekte yan yana yerle\u015ftirilmelidir.  \u00c7ok boyutlu C-biti\u015fik dizilerde, \u00f6\u011feleri bellek adresi s\u0131ras\u0131na g\u00f6re ziyaret ederken son dizin en h\u0131zl\u0131 \u015fekilde de\u011fi\u015fir.  Ancak, Fortran biti\u015fik dizilerinde, ilk dizin en h\u0131zl\u0131 \u015fekilde de\u011fi\u015fir.</p>\n</dd>\n</main>\n"}, "e\u015fyordam": {"title": "e\u015fyordam", "body": "<main>\n<dd><p>E\u015fyordamlar, altyordamlar\u0131n daha genelle\u015ftirilmi\u015f bir bi\u00e7imidir. Alt programlara bir noktada girilir ve ba\u015fka bir noktada \u00e7\u0131k\u0131l\u0131r.  E\u015fyordamlar bir\u00e7ok farkl\u0131 noktada girilebilir, \u00e7\u0131k\u0131labilir ve devam ettirilebilir.  <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-def\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code></a> ifadesi ile uygulanabilirler.  Ayr\u0131ca bak\u0131n\u0131z <span class=\"target\" id=\"index-87\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a>.</p>\n</dd>\n</main>\n"}, "e\u015fyordam i\u015flevi": {"title": "e\u015fyordam i\u015flevi", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-coroutine\"><span class=\"xref std std-term\">coroutine</span></a> nesnesi d\u00f6nd\u00fcren bir i\u015flev.  Bir e\u015fyordam i\u015flevi <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-def\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code></a> ifadesiyle tan\u0131mlanabilir ve <a class=\"reference internal\" href=\"reference/expressions.html#await\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">await</span></code></a>, <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">for</span></code></a> ve <a class=\"reference internal\" href=\"reference/compound_stmts.html#async-with\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">with</span></code></a> anahtar kelimelerini i\u00e7erebilir.  Bunlar <span class=\"target\" id=\"index-88\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0492/\"><strong>PEP 492</strong></a> taraf\u0131ndan tan\u0131t\u0131ld\u0131.</p>\n</dd>\n</main>\n"}, "cpython": {"title": "CPython", "body": "<main>\n<dd><p>Python programlama dilinin <a class=\"reference external\" href=\"https://www.python.org\">python.org</a> \u00fczerinde da\u011f\u0131t\u0131ld\u0131\u011f\u0131 \u015fekliyle kurall\u0131 uygulamas\u0131.  \u201cCPython\u201d terimi, gerekti\u011finde bu uygulamay\u0131 Jython veya IronPython gibi di\u011ferlerinden ay\u0131rmak i\u00e7in kullan\u0131l\u0131r.</p>\n</dd>\n</main>\n"}, "dekorat\u00f6r": {"title": "dekorat\u00f6r", "body": "<main>\n<dd><p>Genellikle <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;wrapper</span></code> s\u00f6zdizimi kullan\u0131larak bir i\u015flev d\u00f6n\u00fc\u015f\u00fcm\u00fc olarak uygulanan, ba\u015fka bir i\u015flevi d\u00f6nd\u00fcren bir i\u015flev.  Dekorat\u00f6rler i\u00e7in yayg\u0131n \u00f6rnekler \u015funlard\u0131r: <a class=\"reference internal\" href=\"library/functions.html#classmethod\" title=\"classmethod\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">classmethod()</span></code></a> ve <a class=\"reference internal\" href=\"library/functions.html#staticmethod\" title=\"staticmethod\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">staticmethod()</span></code></a>.</p>\n<p>Dekorat\u00f6r s\u00f6zdizimi yaln\u0131zca s\u00f6zdizimsel \u015fekerdir, a\u015fa\u011f\u0131daki iki i\u015flev tan\u0131m\u0131 anlamsal olarak e\u015f de\u011ferdir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">staticmethod</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@staticmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Ayn\u0131 kavram s\u0131n\u0131flar i\u00e7in de mevcuttur, ancak orada daha az kullan\u0131l\u0131r.  Dekorat\u00f6rler hakk\u0131nda daha fazla bilgi i\u00e7in <a class=\"reference internal\" href=\"reference/compound_stmts.html#function\"><span class=\"std std-ref\">function definitions</span></a> ve <a class=\"reference internal\" href=\"reference/compound_stmts.html#class\"><span class=\"std std-ref\">class definitions</span></a> belgelerine bak\u0131n.</p>\n</dd>\n</main>\n"}, "tan\u0131mlay\u0131c\u0131": {"title": "tan\u0131mlay\u0131c\u0131", "body": "<main>\n<dd><p><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__get__()</span></code>, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__set__()</span></code> veya <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__delete__()</span></code> y\u00f6ntemlerini tan\u0131mlayan herhangi bir nesne.  Bir s\u0131n\u0131f \u00f6zniteli\u011fi bir tan\u0131mlay\u0131c\u0131 oldu\u011funda, \u00f6znitelik aramas\u0131 \u00fczerine \u00f6zel ba\u011flama davran\u0131\u015f\u0131 tetiklenir.  Normalde, bir \u00f6zniteli\u011fi almak, ayarlamak veya silmek i\u00e7in <em>a.b</em> kullanmak, <em>a</em> i\u00e7in s\u0131n\u0131f s\u00f6zl\u00fc\u011f\u00fcnde <em>b</em> adl\u0131 nesneyi arar, ancak <em>b</em> bir tan\u0131mlay\u0131c\u0131 ise, ilgili tan\u0131mlay\u0131c\u0131 y\u00f6ntemi \u00e7a\u011fr\u0131l\u0131r.  Tan\u0131mlay\u0131c\u0131lar\u0131 anlamak, Python\u2019u derinlemesine anlaman\u0131n anahtar\u0131d\u0131r \u00e7\u00fcnk\u00fc bunlar, i\u015flevler, y\u00f6ntemler, \u00f6zellikler, s\u0131n\u0131f y\u00f6ntemleri, statik y\u00f6ntemler ve s\u00fcper s\u0131n\u0131flara ba\u015fvuru gibi bir\u00e7ok \u00f6zelli\u011fin temelidir.</p>\n<p>Tan\u0131mlay\u0131c\u0131lar\u0131n y\u00f6ntemleri hakk\u0131nda daha fazla bilgi i\u00e7in, bkz. <a class=\"reference internal\" href=\"reference/datamodel.html#descriptors\"><span class=\"std std-ref\">Implementing Descriptors</span></a> veya <a class=\"reference internal\" href=\"howto/descriptor.html#descriptorhowto\"><span class=\"std std-ref\">Descriptor How To Guide</span></a>.</p>\n</dd>\n</main>\n"}, "s\u00f6zl\u00fck": {"title": "s\u00f6zl\u00fck", "body": "<main>\n<dd><p>Rasgele anahtarlar\u0131n de\u011ferlerle e\u015flendi\u011fi ili\u015fkisel bir dizi.  Anahtarlar, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__hash__()</span></code> ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__eq__()</span></code> y\u00f6ntemleriyle herhangi bir nesne olabilir. Perl\u2019de karma denir.</p>\n</dd>\n</main>\n"}, "s\u00f6zl\u00fck anlama": {"title": "s\u00f6zl\u00fck anlama", "body": "<main>\n<dd><p>\u00d6\u011felerin t\u00fcm\u00fcn\u00fc veya bir k\u0131sm\u0131n\u0131 yinelenebilir bir \u015fekilde i\u015flemenin ve sonu\u00e7lar\u0131 i\u00e7eren bir s\u00f6zl\u00fck d\u00f6nd\u00fcrmenin kompakt bir yolu. <code class=\"docutils literal notranslate\"><span class=\"pre\">results</span> <span class=\"pre\">=</span> <span class=\"pre\">{n:</span> <span class=\"pre\">n</span> <span class=\"pre\">**</span> <span class=\"pre\">2</span> <span class=\"pre\">for</span> <span class=\"pre\">range(10)}</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span> <span class=\"pre\">**</span> <span class=\"pre\">2</span></code> de\u011ferine e\u015flenmi\u015f <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> anahtar\u0131n\u0131 i\u00e7eren bir s\u00f6zl\u00fck olu\u015fturur. Bkz. <a class=\"reference internal\" href=\"reference/expressions.html#comprehensions\"><span class=\"std std-ref\">Displays for lists, sets and dictionaries</span></a>.</p>\n</dd>\n</main>\n"}, "s\u00f6zl\u00fck g\u00f6r\u00fcn\u00fcm\u00fc": {"title": "s\u00f6zl\u00fck g\u00f6r\u00fcn\u00fcm\u00fc", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"library/stdtypes.html#dict.keys\" title=\"dict.keys\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dict.keys()</span></code></a>, <a class=\"reference internal\" href=\"library/stdtypes.html#dict.values\" title=\"dict.values\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dict.values()</span></code></a> ve <a class=\"reference internal\" href=\"library/stdtypes.html#dict.items\" title=\"dict.items\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dict.items()</span></code></a> \u2018den d\u00f6nd\u00fcr\u00fclen nesnelere s\u00f6zl\u00fck g\u00f6r\u00fcn\u00fcmleri denir. S\u00f6zl\u00fc\u011f\u00fcn giri\u015fleri \u00fczerinde dinamik bir g\u00f6r\u00fcn\u00fcm sa\u011flarlar; bu, s\u00f6zl\u00fck de\u011fi\u015fti\u011finde g\u00f6r\u00fcn\u00fcm\u00fcn bu de\u011fi\u015fiklikleri yans\u0131tt\u0131\u011f\u0131 anlam\u0131na gelir. S\u00f6zl\u00fck g\u00f6r\u00fcn\u00fcm\u00fcn\u00fc tam liste olmaya zorlamak i\u00e7in <code class=\"docutils literal notranslate\"><span class=\"pre\">list(dictview)</span></code> kullan\u0131n.  Bak\u0131n\u0131z <a class=\"reference internal\" href=\"library/stdtypes.html#dict-views\"><span class=\"std std-ref\">Dictionary view objects</span></a>.</p>\n</dd>\n</main>\n"}, "belge dizisi": {"title": "belge dizisi", "body": "<main>\n<dd><p>Bir s\u0131n\u0131f, i\u015flev veya mod\u00fclde ilk ifade olarak g\u00f6r\u00fcnen bir dize de\u011fi\u015fmezi.  Paket y\u00fcr\u00fct\u00fcld\u00fc\u011f\u00fcnde yoksay\u0131l\u0131rken, derleyici taraf\u0131ndan tan\u0131n\u0131r ve \u00e7evreleyen s\u0131n\u0131f\u0131n, i\u015flevin veya mod\u00fcl\u00fcn <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">__doc__</span></code> \u00f6zniteli\u011fine yerle\u015ftirilir.  \u0130\u00e7 g\u00f6zlem yoluyla eri\u015filebilir oldu\u011fundan, nesnenin belgelenmesi i\u00e7in kurall\u0131 yerdir.</p>\n</dd>\n</main>\n"}, "\u00f6rdek yazma": {"title": "\u00f6rdek yazma", "body": "<main>\n<dd><p>Do\u011fru aray\u00fcze sahip olup olmad\u0131\u011f\u0131n\u0131 belirlemek i\u00e7in bir nesnenin t\u00fcr\u00fcne bakmayan bir programlama stili; bunun yerine, y\u00f6ntem veya nitelik basit\u00e7e \u00e7a\u011fr\u0131l\u0131r veya kullan\u0131l\u0131r (\u201c\u00d6rdek gibi g\u00f6r\u00fcn\u00fcyorsa ve \u00f6rdek gibi vakl\u0131yorsa, \u00f6rdek olmal\u0131d\u0131r.\u201d)  \u0130yi tasarlanm\u0131\u015f kod, belirli t\u00fcrlerden ziyade aray\u00fczleri vurgulayarak, polimorfik ikameye izin vererek esnekli\u011fini art\u0131r\u0131r.  \u00d6rdek yazma, <a class=\"reference internal\" href=\"library/functions.html#type\" title=\"type\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">type()</span></code></a> veya <a class=\"reference internal\" href=\"library/functions.html#isinstance\" title=\"isinstance\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">isinstance()</span></code></a> kullanan testleri \u00f6nler.  (Ancak, \u00f6rdek yazman\u0131n <a class=\"reference internal\" href=\"#term-abstract-base-class\"><span class=\"xref std std-term\">abstract base class</span></a> ile tamamlanabilece\u011fini unutmay\u0131n.)  Bunun yerine, genellikle <a class=\"reference internal\" href=\"library/functions.html#hasattr\" title=\"hasattr\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">hasattr()</span></code></a> testleri veya <a class=\"reference internal\" href=\"#term-EAFP\"><span class=\"xref std std-term\">EAFP</span></a> programlamas\u0131n\u0131 kullan\u0131r.</p>\n</dd>\n</main>\n"}, "eafp": {"title": "EAFP", "body": "<main>\n<dd><p>Af dilemek izin almaktan daha kolayd\u0131r.  Bu yayg\u0131n Python kodlama stili, ge\u00e7erli anahtarlar\u0131n veya niteliklerin varl\u0131\u011f\u0131n\u0131 varsayar ve varsay\u0131m\u0131n yanl\u0131\u015f \u00e7\u0131kmas\u0131 durumunda istisnalar\u0131 yakalar.  Bu temiz ve h\u0131zl\u0131 stil, bir\u00e7ok <a class=\"reference internal\" href=\"reference/compound_stmts.html#try\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">try</span></code></a> ve <a class=\"reference internal\" href=\"reference/compound_stmts.html#except\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">except</span></code></a> ifadesinin varl\u0131\u011f\u0131 ile karakterize edilir.  Teknik, C gibi di\u011fer bir\u00e7ok dilde ortak olan <a class=\"reference internal\" href=\"#term-LBYL\"><span class=\"xref std std-term\">LBYL</span></a> stiliyle \u00e7eli\u015fir.</p>\n</dd>\n</main>\n"}, "ifade (de\u011fer d\u00f6nd\u00fcr\u00fcr)": {"title": "ifade (de\u011fer d\u00f6nd\u00fcr\u00fcr)", "body": "<main>\n<dd><p>Bir de\u011fere g\u00f6re de\u011ferlendirilebilecek bir s\u00f6zdizimi par\u00e7as\u0131.  Ba\u015fka bir deyi\u015fle, bir ifade, t\u00fcm\u00fc bir de\u011fer d\u00f6nd\u00fcren sabit de\u011ferler, adlar, \u00f6znitelik eri\u015fimi, i\u015fle\u00e7ler veya i\u015flev \u00e7a\u011fr\u0131lar\u0131 gibi ifade \u00f6\u011felerinin bir toplam\u0131d\u0131r.  Di\u011fer bir\u00e7ok dilin aksine, t\u00fcm dil yap\u0131lar\u0131 ifade de\u011fildir. Ayr\u0131ca <a class=\"reference internal\" href=\"reference/compound_stmts.html#while\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">while</span></code></a> gibi kullan\u0131lamayan <a class=\"reference internal\" href=\"#term-statement\"><span class=\"xref std std-term\">ifadeler</span></a> de vard\u0131r.  Atamalar da de\u011fer d\u00f6nd\u00fcrmeyen ifadelerdir (statement).</p>\n</dd>\n</main>\n"}, "uzatma mod\u00fcl\u00fc": {"title": "uzatma mod\u00fcl\u00fc", "body": "<main>\n<dd><p>\u00c7ekirdekle ve kullan\u0131c\u0131 koduyla etkile\u015fim kurmak i\u00e7in Python\u2019un C API\u2019sini kullanan, C veya C++ ile yaz\u0131lm\u0131\u015f bir mod\u00fcl.</p>\n</dd>\n</main>\n"}, "f-string": {"title": "f-string", "body": "<main>\n<dd><p>\u00d6n eki <code class=\"docutils literal notranslate\"><span class=\"pre\">'f'</span></code> veya <code class=\"docutils literal notranslate\"><span class=\"pre\">'F'</span></code> olan dize de\u011fi\u015fmezleri genellikle \u201cf-strings\u201d olarak adland\u0131r\u0131l\u0131r; bu, <a class=\"reference internal\" href=\"reference/lexical_analysis.html#f-strings\"><span class=\"std std-ref\">formatted string literals</span></a> \u2018\u0131n k\u0131saltmas\u0131d\u0131r.  Ayr\u0131ca bkz. <span class=\"target\" id=\"index-89\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0498/\"><strong>PEP 498</strong></a>.</p>\n</dd>\n</main>\n"}, "dosya nesnesi": {"title": "dosya nesnesi", "body": "<main>\n<dd><p>Dosya y\u00f6nelimli bir API\u2019yi (<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">read()</span></code> veya <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">write()</span></code> gibi y\u00f6ntemlerle) temel al\u0131nan bir kayna\u011fa g\u00f6steren bir nesne.  Olu\u015fturulma \u015fekline ba\u011fl\u0131 olarak, bir dosya nesnesi ger\u00e7ek bir disk \u00fczerindeki dosyaya veya ba\u015fka bir t\u00fcr depolama veya ileti\u015fim ayg\u0131t\u0131na (\u00f6rne\u011fin standart giri\u015f/\u00e7\u0131k\u0131\u015f, bellek i\u00e7i arabellekler, yuvalar, borular vb.) eri\u015fime arac\u0131l\u0131k edebilir. .  Dosya nesneleri ayr\u0131ca <em class=\"dfn\">file-like objects</em> veya <em class=\"dfn\">streams</em> olarak da adland\u0131r\u0131l\u0131r.</p>\n<p>Asl\u0131nda \u00fc\u00e7 dosya nesnesi kategorisi vard\u0131r: ham <a class=\"reference internal\" href=\"#term-binary-file\"><span class=\"xref std std-term\">binary files</span></a>, arabelle\u011fe al\u0131nm\u0131\u015f <a class=\"reference internal\" href=\"#term-binary-file\"><span class=\"xref std std-term\">binary files</span></a> ve <a class=\"reference internal\" href=\"#term-text-file\"><span class=\"xref std std-term\">text files</span></a>. Aray\u00fczleri <a class=\"reference internal\" href=\"library/io.html#module-io\" title=\"io: Core tools for working with streams.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code></a> mod\u00fcl\u00fcnde tan\u0131mlanm\u0131\u015ft\u0131r.  Bir dosya nesnesi yaratman\u0131n kurall\u0131 yolu <a class=\"reference internal\" href=\"library/functions.html#open\" title=\"open\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">open()</span></code></a> i\u015flevini kullanmakt\u0131r.</p>\n</dd>\n</main>\n"}, "dosya benzeri nesne": {"title": "dosya benzeri nesne", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"#term-file-object\"><span class=\"xref std std-term\">dosya nesnesi</span></a> ile e\u015fanlaml\u0131d\u0131r.</p>\n</dd>\n</main>\n"}, "dosya sistemi kodlamas\u0131 ve hata i\u015fleyicisi": {"title": "dosya sistemi kodlamas\u0131 ve hata i\u015fleyicisi", "body": "<main>\n<dd><p>Python taraf\u0131ndan i\u015fletim sistemindeki baytlar\u0131n kodunu \u00e7\u00f6zmek ve Unicode\u2019u i\u015fletim sistemine kodlamak i\u00e7in kullan\u0131lan kodlama ve hata i\u015fleyici.</p>\n<p>Dosya sistemi kodlamas\u0131, 128\u2019in alt\u0131ndaki t\u00fcm baytlar\u0131n kodunu ba\u015far\u0131yla \u00e7\u00f6zmeyi garanti etmelidir. Dosya sistemi kodlamas\u0131 bu garantiyi sa\u011flayamazsa, API i\u015flevleri <a class=\"reference internal\" href=\"library/exceptions.html#UnicodeError\" title=\"UnicodeError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">UnicodeError</span></code></a> de\u011ferini y\u00fckseltebilir.</p>\n<p><a class=\"reference internal\" href=\"library/sys.html#sys.getfilesystemencoding\" title=\"sys.getfilesystemencoding\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sys.getfilesystemencoding()</span></code></a> ve <a class=\"reference internal\" href=\"library/sys.html#sys.getfilesystemencodeerrors\" title=\"sys.getfilesystemencodeerrors\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sys.getfilesystemencodeerrors()</span></code></a> i\u015flevleri, dosya sistemi kodlamas\u0131n\u0131 ve hata i\u015fleyicisini almak i\u00e7in kullan\u0131labilir.</p>\n<p><a class=\"reference internal\" href=\"#term-filesystem-encoding-and-error-handler\"><span class=\"xref std std-term\">filesystem encoding and error handler</span></a> Python ba\u015flang\u0131c\u0131nda <code class=\"xref c c-func docutils literal notranslate\"><span class=\"pre\">PyConfig_Read()</span></code> i\u015fleviyle yap\u0131land\u0131r\u0131l\u0131r: bkz. <a class=\"reference internal\" href=\"c-api/init_config.html#c.PyConfig.filesystem_encoding\" title=\"PyConfig.filesystem_encoding\"><code class=\"xref c c-member docutils literal notranslate\"><span class=\"pre\">filesystem_encoding</span></code></a> ve <a class=\"reference internal\" href=\"c-api/init_config.html#c.PyConfig.filesystem_errors\" title=\"PyConfig.filesystem_errors\"><code class=\"xref c c-member docutils literal notranslate\"> <span class=\"pre\">filesystem_errors</span></code></a> \u00fcyeleri <a class=\"reference internal\" href=\"c-api/init_config.html#c.PyConfig\" title=\"PyConfig\"><code class=\"xref c c-type docutils literal notranslate\"><span class=\"pre\">PyConfig</span></code></a>.</p>\n<p>Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-locale-encoding\"><span class=\"xref std std-term\">locale encoding</span></a>.</p>\n</dd>\n</main>\n"}, "bulucu": {"title": "bulucu", "body": "<main>\n<dd><p>\u0130\u00e7e aktar\u0131lmakta olan bir mod\u00fcl i\u00e7in <a class=\"reference internal\" href=\"#term-loader\"><span class=\"xref std std-term\">loader</span></a> \u2018\u0131 bulmaya \u00e7al\u0131\u015fan bir nesne.</p>\n<p>Python 3.3\u2019ten beri, iki \u00e7e\u015fit bulucu vard\u0131r: <a class=\"reference internal\" href=\"library/sys.html#sys.meta_path\" title=\"sys.meta_path\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.meta_path</span></code></a> ile kullan\u0131lmak \u00fczere <a class=\"reference internal\" href=\"#term-meta-path-finder\"><span class=\"xref std std-term\">meta yol bulucular</span></a>, ve <a class=\"reference internal\" href=\"library/sys.html#sys.path_hooks\" title=\"sys.path_hooks\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path_hooks</span></code></a> ile kullan\u0131lmak \u00fczere <a class=\"reference internal\" href=\"#term-path-entry-finder\"><span class=\"xref std std-term\">yol giri\u015fi bulucular</span></a>.</p>\n<p>Daha fazla ayr\u0131nt\u0131 i\u00e7in <span class=\"target\" id=\"index-90\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0302/\"><strong>PEP 302</strong></a>, <span class=\"target\" id=\"index-91\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0420/\"><strong>PEP 420</strong></a> ve <span class=\"target\" id=\"index-92\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0451/\"><strong>PEP 451</strong></a> bak\u0131n.</p>\n</dd>\n</main>\n"}, "kat b\u00f6l\u00fcm\u00fc": {"title": "kat b\u00f6l\u00fcm\u00fc", "body": "<main>\n<dd><p>En yak\u0131n tam say\u0131ya yuvarlayan matematiksel b\u00f6lme.  Kat b\u00f6lme operat\u00f6r\u00fc <code class=\"docutils literal notranslate\"><span class=\"pre\">//</span></code> \u015feklindedir.  \u00d6rne\u011fin, <code class=\"docutils literal notranslate\"><span class=\"pre\">11</span> <span class=\"pre\">//</span> <span class=\"pre\">4</span></code> ifadesi, ger\u00e7ek y\u00fczer b\u00f6lme taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen <code class=\"docutils literal notranslate\"><span class=\"pre\">2.75</span></code> de\u011ferinin aksine <code class=\"docutils literal notranslate\"><span class=\"pre\">2</span></code> olarak de\u011ferlendirilir.  <code class=\"docutils literal notranslate\"><span class=\"pre\">(-11)</span> <span class=\"pre\">//</span> <span class=\"pre\">4</span></code> \u2018\u00fcn <code class=\"docutils literal notranslate\"><span class=\"pre\">-3</span></code> oldu\u011funa dikkat edin, \u00e7\u00fcnk\u00fc bu <code class=\"docutils literal notranslate\"><span class=\"pre\">-2.75</span></code> yuvarlat\u0131lm\u0131\u015f <em>a\u015fa\u011f\u0131</em>. Bak\u0131n\u0131z <span class=\"target\" id=\"index-93\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0238/\"><strong>PEP 238</strong></a>.</p>\n</dd>\n</main>\n"}, "fonksiyon": {"title": "fonksiyon", "body": "<main>\n<dd><p>Bir arayana bir de\u011fer d\u00f6nd\u00fcren bir dizi ifade. Ayr\u0131ca, g\u00f6vdenin y\u00fcr\u00fct\u00fclmesinde kullan\u0131labilen s\u0131f\u0131r veya daha fazla <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">arg\u00fcman</span></a> iletilebilir. Ayr\u0131ca <a class=\"reference internal\" href=\"#term-parameter\"><span class=\"xref std std-term\">parameter</span></a>, <a class=\"reference internal\" href=\"#term-method\"><span class=\"xref std std-term\">method</span></a> ve <a class=\"reference internal\" href=\"reference/compound_stmts.html#function\"><span class=\"std std-ref\">Function definitions</span></a> b\u00f6l\u00fcm\u00fcne bak\u0131n.</p>\n</dd>\n</main>\n"}, "fonksiyon a\u00e7\u0131klamas\u0131": {"title": "fonksiyon a\u00e7\u0131klamas\u0131", "body": "<main>\n<dd><p>Bir i\u015flev parametresinin veya d\u00f6n\u00fc\u015f de\u011ferinin <a class=\"reference internal\" href=\"#term-annotation\"><span class=\"xref std std-term\">ek a\u00e7\u0131klamas\u0131</span></a>.</p>\n<p>\u0130\u015flev ek a\u00e7\u0131klamalar\u0131 genellikle <a class=\"reference internal\" href=\"#term-type-hint\"><span class=\"xref std std-term\">type hints</span></a> i\u00e7in kullan\u0131l\u0131r: \u00f6rne\u011fin, bu fonksiyonun iki <a class=\"reference internal\" href=\"library/functions.html#int\" title=\"int\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">int</span></code></a> arg\u00fcman almas\u0131 ve ayr\u0131ca bir <a class=\"reference internal\" href=\"library/functions.html#int\" title=\"int\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">int</span></code></a> d\u00f6n\u00fc\u015f de\u011ferine sahip olmas\u0131 beklenir</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">sum_two_numbers</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n   <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n</pre></div>\n</div>\n<p>\u0130\u015flev a\u00e7\u0131klama s\u00f6zdizimi <a class=\"reference internal\" href=\"reference/compound_stmts.html#function\"><span class=\"std std-ref\">Function definitions</span></a> b\u00f6l\u00fcm\u00fcnde a\u00e7\u0131klanmaktad\u0131r.</p>\n<p>Bu i\u015flevi a\u00e7\u0131klayan <a class=\"reference internal\" href=\"#term-variable-annotation\"><span class=\"xref std std-term\">variable annotation</span></a> ve <span class=\"target\" id=\"index-94\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0484/\"><strong>PEP 484</strong></a> \u2018e bak\u0131n. Ek a\u00e7\u0131klamalarla \u00e7al\u0131\u015fmaya ili\u015fkin en iyi uygulamalar i\u00e7in ayr\u0131ca <a class=\"reference internal\" href=\"howto/annotations.html#annotations-howto\"><span class=\"std std-ref\">Annotations Best Practices</span></a> konusuna bak\u0131n.</p>\n</dd>\n</main>\n"}, "__future__": {"title": "__future__", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"reference/simple_stmts.html#future\"><span class=\"std std-ref\">future ifadesi</span></a>, <code class=\"docutils literal notranslate\"><span class=\"pre\">from</span> <span class=\"pre\">__future__</span> <span class=\"pre\">import</span> <span class=\"pre\">&lt;feature&gt;</span></code>, derleyiciyi, Python\u2019un gelecekteki bir s\u00fcr\u00fcm\u00fcnde standart hale gelecek olan s\u00f6zdizimini veya semanti\u011fi kullanarak mevcut mod\u00fcl\u00fc derlemeye y\u00f6nlendirir. <a class=\"reference internal\" href=\"library/__future__.html#module-__future__\" title=\"__future__: Future statement definitions\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__future__</span></code></a> mod\u00fcl\u00fc, <em>feature</em>\u2019\u0131n olas\u0131 de\u011ferlerini belgeler.  Bu mod\u00fcl\u00fc i\u00e7e aktararak ve de\u011fi\u015fkenlerini de\u011ferlendirerek, dile ilk kez yeni bir \u00f6zelli\u011fin ne zaman eklendi\u011fini ve ne zaman varsay\u0131lan olaca\u011f\u0131n\u0131 (ya da yapt\u0131\u011f\u0131n\u0131) g\u00f6rebilirsiniz:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">__future__</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">__future__</span><span class=\"o\">.</span><span class=\"n\">division</span>\n<span class=\"go\">_Feature((2, 2, 0, &#39;alpha&#39;, 2), (3, 0, 0, &#39;alpha&#39;, 0), 8192)</span>\n</pre></div>\n</div>\n</dd>\n</main>\n"}, "\u00e7\u00f6p toplama": {"title": "\u00e7\u00f6p toplama", "body": "<main>\n<dd><p>Art\u0131k kullan\u0131lmad\u0131\u011f\u0131nda belle\u011fi bo\u015faltma i\u015flemi.  Python, referans say\u0131m\u0131 ve referans d\u00f6ng\u00fclerini alg\u0131lay\u0131p k\u0131rabilen bir d\u00f6ng\u00fcsel \u00e7\u00f6p toplay\u0131c\u0131 arac\u0131l\u0131\u011f\u0131yla \u00e7\u00f6p toplama ger\u00e7ekle\u015ftirir.  \u00c7\u00f6p toplay\u0131c\u0131 <a class=\"reference internal\" href=\"library/gc.html#module-gc\" title=\"gc: Interface to the cycle-detecting garbage collector.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code></a> mod\u00fcl\u00fc kullan\u0131larak kontrol edilebilir.</p>\n</dd>\n</main>\n"}, "jenerat\u00f6r": {"title": "jenerat\u00f6r", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-generator-iterator\"><span class=\"xref std std-term\">generator iterator</span></a> d\u00f6nd\u00fcren bir i\u015flev.  Bir for d\u00f6ng\u00fcs\u00fcnde kullan\u0131labilen bir dizi de\u011fer \u00fcretmek i\u00e7in <a class=\"reference internal\" href=\"reference/simple_stmts.html#yield\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">yield</span></code></a> ifadeleri i\u00e7ermesi veya <a class=\"reference internal\" href=\"library/functions.html#next\" title=\"next\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">next()</span></code></a> i\u015fleviyle birer birer al\u0131nabilmesi d\u0131\u015f\u0131nda normal bir i\u015fleve benziyor.</p>\n<p>Genellikle bir \u00fcretici i\u015flevine at\u0131fta bulunur, ancak baz\u0131 ba\u011flamlarda bir <em>jenerat\u00f6r yineleyicisine</em> at\u0131fta bulunabilir.  Ama\u00e7lanan anlam\u0131n net olmad\u0131\u011f\u0131 durumlarda, tam terimlerin kullan\u0131lmas\u0131 belirsizli\u011fi \u00f6nler.</p>\n</dd>\n</main>\n"}, "jenerat\u00f6r yineleyici": {"title": "jenerat\u00f6r yineleyici", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-generator\"><span class=\"xref std std-term\">generator</span></a> i\u015flevi taraf\u0131ndan olu\u015fturulan bir nesne.</p>\n<p>Her <a class=\"reference internal\" href=\"reference/simple_stmts.html#yield\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">yield</span></code></a>, konum y\u00fcr\u00fctme durumunu hat\u0131rlayarak (yerel de\u011fi\u015fkenler ve bekleyen try ifadeleri dahil) i\u015flemeyi ge\u00e7ici olarak ask\u0131ya al\u0131r.  <em>jenerat\u00f6r yineleyici</em> devam etti\u011finde, kald\u0131\u011f\u0131 yerden devam eder (her \u00e7a\u011fr\u0131da yeniden ba\u015flayan i\u015flevlerin aksine).</p>\n</dd>\n</main>\n"}, "jenerat\u00f6r ifadesi": {"title": "jenerat\u00f6r ifadesi", "body": "<main>\n<dd><p>Yineleyici d\u00f6nd\u00fcren bir ifade.  Bir d\u00f6ng\u00fc de\u011fi\u015fkenini, aral\u0131\u011f\u0131 ve iste\u011fe ba\u011fl\u0131 bir <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">if</span></code> yan t\u00fcmcesini tan\u0131mlayan bir <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">for</span></code> yan t\u00fcmcesinin takip etti\u011fi normal bir ifadeye benziyor.  Birle\u015ftirilmi\u015f ifade, bir \u00e7evreleyen i\u00e7in de\u011ferler \u00fcretir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>         <span class=\"c1\"># sum of squares 0, 1, 4, ... 81</span>\n<span class=\"go\">285</span>\n</pre></div>\n</div>\n</dd>\n</main>\n"}, "genel i\u015flev": {"title": "genel i\u015flev", "body": "<main>\n<dd><p>Farkl\u0131 t\u00fcrler i\u00e7in ayn\u0131 i\u015flemi uygulayan birden \u00e7ok i\u015flevden olu\u015fan bir i\u015flev. Bir \u00e7a\u011fr\u0131 s\u0131ras\u0131nda hangi uygulaman\u0131n kullan\u0131lmas\u0131 gerekti\u011fi, g\u00f6nderme algoritmas\u0131 taraf\u0131ndan belirlenir.</p>\n<p>Ayr\u0131ca <a class=\"reference internal\" href=\"#term-single-dispatch\"><span class=\"xref std std-term\">single dispatch</span></a> s\u00f6zl\u00fck girdisine, <a class=\"reference internal\" href=\"library/functools.html#functools.singledispatch\" title=\"functools.singledispatch\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">functools.singledispatch()</span></code></a> dekorat\u00f6r\u00fcne ve <span class=\"target\" id=\"index-95\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0443/\"><strong>PEP 443</strong></a> \u2018e bak\u0131n.</p>\n</dd>\n</main>\n"}, "genel tip": {"title": "genel tip", "body": "<main>\n<dd><p>Parametrelendirilebilen bir <a class=\"reference internal\" href=\"#term-type\"><span class=\"xref std std-term\">type</span></a>; tipik olarak bir <a class=\"reference internal\" href=\"reference/datamodel.html#sequence-types\"><span class=\"std std-ref\">konteyner s\u0131n\u0131f\u0131</span></a>, \u00f6rne\u011fin <a class=\"reference internal\" href=\"library/stdtypes.html#list\" title=\"list\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">list</span></code></a> veya <a class=\"reference internal\" href=\"library/stdtypes.html#dict\" title=\"dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a>. <a class=\"reference internal\" href=\"#term-type-hint\"><span class=\"xref std std-term\">type hint</span></a> ve <a class=\"reference internal\" href=\"#term-annotation\"><span class=\"xref std std-term\">annotation</span></a> i\u00e7in kullan\u0131l\u0131r.</p>\n<p>Daha fazla ayr\u0131nt\u0131 i\u00e7in <a class=\"reference internal\" href=\"library/stdtypes.html#types-genericalias\"><span class=\"std std-ref\">generic allias types</span></a>, <span class=\"target\" id=\"index-96\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0483/\"><strong>PEP 483</strong></a>, <span class=\"target\" id=\"index-97\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0484/\"><strong>PEP 484</strong></a>, <span class=\"target\" id=\"index-98\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0585/\"><strong>PEP 585</strong></a> ve <a class=\"reference internal\" href=\"library/typing.html#module-typing\" title=\"typing: Support for type hints (see :pep:`484`).\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">typing</span></code></a> mod\u00fcl\u00fcne bak\u0131n.</p>\n</dd>\n</main>\n"}, "gil": {"title": "GIL", "body": "<main>\n<dd><p>Bak\u0131n\u0131z <a class=\"reference internal\" href=\"#term-global-interpreter-lock\"><span class=\"xref std std-term\">global interpreter lock</span></a>.</p>\n</dd>\n</main>\n"}, "genel terc\u00fcman kilidi": {"title": "genel terc\u00fcman kilidi", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"#term-CPython\"><span class=\"xref std std-term\">CPython</span></a> yorumlay\u0131c\u0131s\u0131 taraf\u0131ndan ayn\u0131 anda yaln\u0131zca bir i\u015f par\u00e7ac\u0131\u011f\u0131n\u0131n Python <a class=\"reference internal\" href=\"#term-bytecode\"><span class=\"xref std std-term\">bytecode</span></a> \u2018u y\u00fcr\u00fctmesini sa\u011flamak i\u00e7in kullan\u0131lan mekanizma. Bu, nesne modelini (<a class=\"reference internal\" href=\"library/stdtypes.html#dict\" title=\"dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a> gibi kritik yerle\u015fik t\u00fcrler dahil) e\u015fzamanl\u0131 eri\u015fime kar\u015f\u0131 \u00f6rt\u00fck olarak g\u00fcvenli hale getirerek CPython uygulamas\u0131n\u0131 basitle\u015ftirir.  T\u00fcm yorumlay\u0131c\u0131y\u0131 kilitlemek, \u00e7ok i\u015flemcili makinelerin sa\u011flad\u0131\u011f\u0131 paralelli\u011fin \u00e7o\u011fu pahas\u0131na, yorumlay\u0131c\u0131n\u0131n \u00e7ok i\u015f par\u00e7ac\u0131kl\u0131 olmas\u0131n\u0131 kolayla\u015ft\u0131r\u0131r.</p>\n<p>Bununla birlikte, standart veya \u00fc\u00e7\u00fcnc\u00fc taraf baz\u0131 geni\u015fletme mod\u00fclleri, s\u0131k\u0131\u015ft\u0131rma veya karma gibi hesaplama a\u00e7\u0131s\u0131ndan yo\u011fun g\u00f6revler yaparken GIL\u2019yi serbest b\u0131rakacak \u015fekilde tasarlanm\u0131\u015ft\u0131r.  Ayr\u0131ca, GIL, G/\u00c7 yaparken her zaman serbest b\u0131rak\u0131l\u0131r.</p>\n<p>\u201cSerbest i\u015f par\u00e7ac\u0131kl\u0131\u201d bir yorumlay\u0131c\u0131 (payla\u015f\u0131lan verileri \u00e7ok daha ince bir ayr\u0131nt\u0131 d\u00fczeyinde kilitleyen) olu\u015fturma \u00e7abalar\u0131, ortak tek i\u015flemcili durumda performans d\u00fc\u015ft\u00fc\u011f\u00fc i\u00e7in ba\u015far\u0131l\u0131 olmam\u0131\u015ft\u0131r. Bu performans sorununun \u00fcstesinden gelinmesinin uygulamay\u0131 \u00e7ok daha karma\u015f\u0131k hale getirece\u011fine ve dolay\u0131s\u0131yla bak\u0131m\u0131n\u0131 daha maliyetli hale getirece\u011fine inan\u0131lmaktad\u0131r.</p>\n</dd>\n</main>\n"}, "karma tabanl\u0131 pyc": {"title": "karma tabanl\u0131 pyc", "body": "<main>\n<dd><p>Ge\u00e7erlili\u011fini belirlemek i\u00e7in ilgili kaynak dosyan\u0131n son de\u011fi\u015ftirilme zaman\u0131 yerine karma de\u011ferini kullanan bir bayt kodu \u00f6nbellek dosyas\u0131. Bak\u0131n\u0131z <a class=\"reference internal\" href=\"reference/import.html#pyc-invalidation\"><span class=\"std std-ref\">Cached bytecode invalidation</span></a>.</p>\n</dd>\n</main>\n"}, "y\u0131kanabilir": {"title": "y\u0131kanabilir", "body": "<main>\n<dd><p>Bir nesne, \u00f6mr\u00fc boyunca asla de\u011fi\u015fmeyen bir karma de\u011fere sahipse (bir <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__hash__()</span></code> y\u00f6ntemine ihtiya\u00e7 duyar) ve di\u011fer nesnelerle kar\u015f\u0131la\u015ft\u0131r\u0131labilirse (bir <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__eq__()</span></code> y\u00f6ntemine ihtiya\u00e7 duyar) <em>hashable</em> olur. .  E\u015fit kar\u015f\u0131la\u015ft\u0131ran Hashable nesneleri ayn\u0131 karma de\u011ferine sahip olmal\u0131d\u0131r.</p>\n<p>Hashability, bir nesneyi bir s\u00f6zl\u00fck anahtar\u0131 ve bir set \u00fcyesi olarak kullan\u0131labilir hale getirir, \u00e7\u00fcnk\u00fc bu veri yap\u0131lar\u0131 hash de\u011ferini dahili olarak kullan\u0131r.</p>\n<p>Python\u2019un de\u011fi\u015fmez yerle\u015fik nesnelerinin \u00e7o\u011fu, y\u0131kanabilir; de\u011fi\u015ftirilebilir kaplar (listeler veya s\u00f6zl\u00fckler gibi) de\u011fildir; de\u011fi\u015fmez kaplar (t\u00fcpler ve donmu\u015f k\u00fcmeler gibi) yaln\u0131zca \u00f6\u011felerinin y\u0131kanabilir olmas\u0131 durumunda y\u0131kanabilirdir.  Kullan\u0131c\u0131 tan\u0131ml\u0131 s\u0131n\u0131flar\u0131n \u00f6rnekleri olan nesneler varsay\u0131lan olarak hash edilebilirdir.  Hepsi e\u015fit olmayan\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131r (kendileriyle hari\u00e7) ve hash de\u011ferleri <a class=\"reference internal\" href=\"library/functions.html#id\" title=\"id\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">id()</span></code></a> \u2018lerinden t\u00fcretilir.</p>\n</dd>\n</main>\n"}, "bo\u015fta": {"title": "BO\u015eTA", "body": "<main>\n<dd><p>Python i\u00e7in Entegre Geli\u015ftirme Ortam\u0131. <a class=\"reference internal\" href=\"library/idle.html#idle\"><span class=\"std std-ref\">IDLE</span></a>, Python\u2019un standart da\u011f\u0131t\u0131m\u0131yla birlikte gelen temel bir d\u00fczenleyici ve yorumlay\u0131c\u0131 ortam\u0131d\u0131r.</p>\n</dd>\n</main>\n"}, "de\u011fi\u015fmez": {"title": "de\u011fi\u015fmez", "body": "<main>\n<dd><p>Sabit de\u011feri olan bir nesne.  De\u011fi\u015fmez nesneler aras\u0131nda say\u0131lar, dizeler ve demetler bulunur.  B\u00f6yle bir nesne de\u011fi\u015ftirilemez.  Farkl\u0131 bir de\u011ferin saklanmas\u0131 gerekiyorsa yeni bir nesne olu\u015fturulmal\u0131d\u0131r.  \u00d6rne\u011fin bir s\u00f6zl\u00fckte anahtar olarak, sabit bir karma de\u011ferinin gerekli oldu\u011fu yerlerde \u00f6nemli bir rol oynarlar.</p>\n</dd>\n</main>\n"}, "i\u00e7e aktar\u0131m yolu": {"title": "i\u00e7e aktar\u0131m yolu", "body": "<main>\n<dd><p>\u0130\u00e7e aktar\u0131lacak mod\u00fcller i\u00e7in <a class=\"reference internal\" href=\"#term-path-based-finder\"><span class=\"xref std std-term\">path based finder</span></a> taraf\u0131ndan aranan konumlar\u0131n (veya <a class=\"reference internal\" href=\"#term-path-entry\"><span class=\"xref std std-term\">path entries</span></a>) listesi. \u0130\u00e7e aktarma s\u0131ras\u0131nda, bu konum listesi genellikle <a class=\"reference internal\" href=\"library/sys.html#sys.path\" title=\"sys.path\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path</span></code></a> adresinden gelir, ancak alt paketler i\u00e7in \u00fcst paketin <code class=\"docutils literal notranslate\"><span class=\"pre\">__path__</span></code> \u00f6zelli\u011finden de gelebilir.</p>\n</dd>\n</main>\n"}, "i\u00e7e aktarma": {"title": "i\u00e7e aktarma", "body": "<main>\n<dd><p>Bir mod\u00fcldeki Python kodunun ba\u015fka bir mod\u00fcldeki Python koduna sunulmas\u0131 s\u00fcreci.</p>\n</dd>\n</main>\n"}, "i\u00e7e aktar\u0131c\u0131": {"title": "i\u00e7e aktar\u0131c\u0131", "body": "<main>\n<dd><p>Bir mod\u00fcl\u00fc hem bulan hem de y\u00fckleyen bir nesne; hem bir <a class=\"reference internal\" href=\"#term-finder\"><span class=\"xref std std-term\">finder</span></a> hem de <a class=\"reference internal\" href=\"#term-loader\"><span class=\"xref std std-term\">loader</span></a> nesnesi.</p>\n</dd>\n</main>\n"}, "etkile\u015fimli": {"title": "etkile\u015fimli", "body": "<main>\n<dd><p>Python\u2019un etkile\u015fimli bir yorumlay\u0131c\u0131s\u0131 vard\u0131r; bu, yorumlay\u0131c\u0131 isteminde ifadeler ve ifadeler girebilece\u011finiz, bunlar\u0131 hemen \u00e7al\u0131\u015ft\u0131rabilece\u011finiz ve sonu\u00e7lar\u0131n\u0131 g\u00f6rebilece\u011finiz anlam\u0131na gelir.  Herhangi bir arg\u00fcman olmadan <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span></code> \u2018u ba\u015flatman\u0131z yeterlidir (muhtemelen bilgisayar\u0131n\u0131z\u0131n ana men\u00fcs\u00fcnden se\u00e7erek). Yeni fikirleri test etmenin veya mod\u00fclleri ve paketleri incelemenin \u00e7ok g\u00fc\u00e7l\u00fc bir yoludur (<code class=\"docutils literal notranslate\"><span class=\"pre\">help(x)</span></code> \u2018i unutmay\u0131n).</p>\n</dd>\n</main>\n"}, "yorumlanm\u0131\u015f": {"title": "yorumlanm\u0131\u015f", "body": "<main>\n<dd><p>Python, derlenmi\u015f bir dilin aksine yorumlanm\u0131\u015f bir dildir, ancak bayt kodu derleyicisinin varl\u0131\u011f\u0131 nedeniyle ayr\u0131m bulan\u0131k olabilir.  Bu, kaynak dosyalar\u0131n daha sonra \u00e7al\u0131\u015ft\u0131r\u0131lacak bir y\u00fcr\u00fct\u00fclebilir dosya olu\u015fturmadan do\u011frudan \u00e7al\u0131\u015ft\u0131r\u0131labilece\u011fi anlam\u0131na gelir. Yorumlanan diller genellikle derlenmi\u015f dillerden daha k\u0131sa bir geli\u015ftirme/hata ay\u0131klama d\u00f6ng\u00fcs\u00fcne sahiptir, ancak programlar\u0131 genellikle daha yava\u015f \u00e7al\u0131\u015f\u0131r.  Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-interactive\"><span class=\"xref std std-term\">interactive</span></a>.</p>\n</dd>\n</main>\n"}, "terc\u00fcman kapatma": {"title": "terc\u00fcman kapatma", "body": "<main>\n<dd><p>Kapat\u0131lmas\u0131 istendi\u011finde, Python yorumlay\u0131c\u0131s\u0131, mod\u00fcller ve \u00e7e\u015fitli kritik i\u00e7 yap\u0131lar gibi tahsis edilen t\u00fcm kaynaklar\u0131 kademeli olarak serbest b\u0131rakt\u0131\u011f\u0131 \u00f6zel bir a\u015famaya girer.  Ayr\u0131ca <a class=\"reference internal\" href=\"#term-garbage-collection\"><span class=\"xref std std-term\">garbage collector</span></a> i\u00e7in birka\u00e7 \u00e7a\u011fr\u0131 yapar. Bu, kullan\u0131c\u0131 tan\u0131ml\u0131 y\u0131k\u0131c\u0131larda veya zay\u0131f referans geri aramalar\u0131nda kodun y\u00fcr\u00fct\u00fclmesini tetikleyebilir. Kapatma a\u015famas\u0131nda y\u00fcr\u00fct\u00fclen kod, dayand\u0131\u011f\u0131 kaynaklar art\u0131k \u00e7al\u0131\u015fmayabilece\u011finden \u00e7e\u015fitli istisnalarla kar\u015f\u0131la\u015fabilir (yayg\u0131n \u00f6rnekler k\u00fct\u00fcphane mod\u00fclleri veya uyar\u0131 makineleridir).</p>\n<p>Yorumlay\u0131c\u0131n\u0131n kapat\u0131lmas\u0131n\u0131n ana nedeni, <code class=\"docutils literal notranslate\"><span class=\"pre\">__main__</span></code> mod\u00fcl\u00fcn\u00fcn veya \u00e7al\u0131\u015ft\u0131r\u0131lan beti\u011fin y\u00fcr\u00fctmeyi bitirmi\u015f olmas\u0131d\u0131r.</p>\n</dd>\n</main>\n"}, "yinelenebilir": {"title": "yinelenebilir", "body": "<main>\n<dd><p>\u00dcyelerini teker teker d\u00f6nd\u00fcrebilen bir nesne. Yineleme \u00f6rnekleri, t\u00fcm dizi t\u00fcrlerini (<a class=\"reference internal\" href=\"library/stdtypes.html#list\" title=\"list\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, ve <a class=\"reference internal\" href=\"library/stdtypes.html#tuple\" title=\"tuple\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tuple</span></code></a> gibi) ve <a class=\"reference internal\" href=\"library/stdtypes.html#dict\" title=\"dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a>, <a class=\"reference internal\" href=\"#term-file-object\"><span class=\"xref std std-term\">dosya objeleri</span></a> gibi baz\u0131 dizi olmayan t\u00fcrleri ve bir <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__iter__()</span></code> y\u00f6ntemiyle veya <a class=\"reference internal\" href=\"#term-sequence\"><span class=\"xref std std-term\">dizi</span></a> semanti\u011fini uygulayan bir <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__getitem__()</span></code> y\u00f6ntemiyle tan\u0131mlad\u0131\u011f\u0131n\u0131z t\u00fcm s\u0131n\u0131flar\u0131n nesnelerini i\u00e7erir.</p>\n<p>Yinelenebilirler bir <a class=\"reference internal\" href=\"reference/compound_stmts.html#for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">for</span></code></a> d\u00f6ng\u00fcs\u00fcnde ve bir dizinin gerekli oldu\u011fu di\u011fer bir\u00e7ok yerde kullan\u0131labilir (<a class=\"reference internal\" href=\"library/functions.html#zip\" title=\"zip\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">zip()</span></code></a>, <a class=\"reference internal\" href=\"library/functions.html#map\" title=\"map\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">map()</span></code></a>, \u2026).  Yerle\u015fik <a class=\"reference internal\" href=\"library/functions.html#iter\" title=\"iter\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">iter()</span></code></a> i\u015flevine arg\u00fcman olarak yinelenebilir bir nesne iletildi\u011finde, nesne i\u00e7in bir yineleyici d\u00f6nd\u00fcr\u00fcr.  Bu yineleyici, de\u011ferler k\u00fcmesi \u00fczerinden bir ge\u00e7i\u015f i\u00e7in iyidir.  Yinelenebilirleri kullan\u0131rken, genellikle <a class=\"reference internal\" href=\"library/functions.html#iter\" title=\"iter\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">iter()</span></code></a> \u00e7a\u011f\u0131rman\u0131z veya yineleyici nesnelerle kendiniz ilgilenmeniz gerekmez.  <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> ifadesi bunu sizin i\u00e7in otomatik olarak yapar ve yineleyiciyi d\u00f6ng\u00fc s\u00fcresince tutmak i\u00e7in ge\u00e7ici bir ads\u0131z de\u011fi\u015fken olu\u015fturur.  Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-iterator\"><span class=\"xref std std-term\">iterator</span></a>, <a class=\"reference internal\" href=\"#term-sequence\"><span class=\"xref std std-term\">sequence</span></a> ve <a class=\"reference internal\" href=\"#term-generator\"><span class=\"xref std std-term\">generator</span></a>.</p>\n</dd>\n</main>\n"}, "yineleyici": {"title": "yineleyici", "body": "<main>\n<dd><p>Bir veri ak\u0131\u015f\u0131n\u0131 temsil eden bir nesne.  Yineleyicinin <a class=\"reference internal\" href=\"library/stdtypes.html#iterator.__next__\" title=\"iterator.__next__\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__next__()</span></code></a> y\u00f6ntemine (veya yerle\u015fik <a class=\"reference internal\" href=\"library/functions.html#next\" title=\"next\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">next()</span></code></a> i\u015flevine iletilmesi) yinelenen \u00e7a\u011fr\u0131lar, ak\u0131\u015ftaki ard\u0131\u015f\u0131k \u00f6\u011feleri d\u00f6nd\u00fcr\u00fcr.  Daha fazla veri bulunmad\u0131\u011f\u0131nda, bunun yerine bir <a class=\"reference internal\" href=\"library/exceptions.html#StopIteration\" title=\"StopIteration\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">StopIteration</span></code></a> istisnas\u0131 olu\u015fturulur.  Bu noktada, yineleyici nesnesi t\u00fckenir ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__next__()</span></code> y\u00f6ntemine yap\u0131lan di\u011fer \u00e7a\u011fr\u0131lar yaln\u0131zca <a class=\"reference internal\" href=\"library/exceptions.html#StopIteration\" title=\"StopIteration\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">StopIteration</span></code></a> \u00f6\u011fesini yeniden y\u00fckseltir.  Yineleyicilerin, yineleyici nesnesinin kendisini d\u00f6nd\u00fcren bir <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__iter__()</span></code> y\u00f6ntemine sahip olmalar\u0131 gerekir, b\u00f6ylece her yineleyici de yinelenebilir ve di\u011fer yinelenebilirlerin kabul edildi\u011fi \u00e7o\u011fu yerde kullan\u0131labilir.  Dikkate de\u011fer bir istisna, birden \u00e7ok yineleme ge\u00e7i\u015fini deneyen koddur.  Bir kapsay\u0131c\u0131 nesnesi (\u00f6rne\u011fin bir <a class=\"reference internal\" href=\"library/stdtypes.html#list\" title=\"list\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">list</span></code></a>), onu <a class=\"reference internal\" href=\"library/functions.html#iter\" title=\"iter\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">iter()</span></code></a> i\u015flevine her iletti\u011finizde veya onu bir <a class=\"reference internal\" href=\"reference/compound_stmts.html#for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">for</span></code></a> d\u00f6ng\u00fcs\u00fcnde kulland\u0131\u011f\u0131n\u0131zda yeni bir yineleyici \u00fcretir.  Bunu bir yineleyiciyle denemek, \u00f6nceki yineleme ge\u00e7i\u015finde kullan\u0131lan ayn\u0131 t\u00fckenmi\u015f yineleyici nesnesini d\u00f6nd\u00fcrerek bo\u015f bir kap gibi g\u00f6r\u00fcnmesini sa\u011flar.</p>\n<p>Daha fazla bilgi <a class=\"reference internal\" href=\"library/stdtypes.html#typeiter\"><span class=\"std std-ref\">Yineleyici T\u00fcrleri</span></a> i\u00e7inde bulunabilir.</p>\n<div class=\"impl-detail compound\">\n<p><strong>CPython uygulama ayr\u0131nt\u0131s\u0131:</strong> CPython, bir yineleyicinin <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__iter__()</span></code> tan\u0131mlamas\u0131 gereksinimini tutarl\u0131 bir \u015fekilde uygulamaz.</p>\n</div>\n</dd>\n</main>\n"}, "anahtar i\u015flev": {"title": "anahtar i\u015flev", "body": "<main>\n<dd><p>Anahtar i\u015flevi veya harmanlama i\u015flevi, s\u0131ralama veya s\u0131ralama i\u00e7in kullan\u0131lan bir de\u011feri d\u00f6nd\u00fcren bir \u00e7a\u011fr\u0131labilir.  \u00d6rne\u011fin, <a class=\"reference internal\" href=\"library/locale.html#locale.strxfrm\" title=\"locale.strxfrm\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">locale.strxfrm()</span></code></a>, yerel ayara \u00f6zg\u00fc s\u0131ralama kurallar\u0131n\u0131n fark\u0131nda olan bir s\u0131ralama anahtar\u0131 \u00fcretmek i\u00e7in kullan\u0131l\u0131r.</p>\n<p>Python\u2019daki bir dizi ara\u00e7, \u00f6\u011felerin nas\u0131l s\u0131raland\u0131\u011f\u0131n\u0131 veya grupland\u0131r\u0131ld\u0131\u011f\u0131n\u0131 kontrol etmek i\u00e7in temel i\u015flevleri kabul eder.  Bunlar <a class=\"reference internal\" href=\"library/functions.html#min\" title=\"min\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">min()</span></code></a>, <a class=\"reference internal\" href=\"library/functions.html#max\" title=\"max\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">max()</span></code></a>, <a class=\"reference internal\" href=\"library/functions.html#sorted\" title=\"sorted\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sorted()</span></code></a>, <a class=\"reference internal\" href=\"library/stdtypes.html#list.sort\" title=\"list.sort\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">list.sort()</span></code></a>, <a class=\"reference internal\" href=\"library/heapq.html#heapq.merge\" title=\"heapq.merge\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">heapq.merge()</span></code></a>, <a class=\"reference internal\" href=\"library/heapq.html#heapq.nsmallest\" title=\"heapq.nsmallest\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">heapq.nsmallest()</span></code></a>, <a class=\"reference internal\" href=\"library/heapq.html#heapq.nlargest\" title=\"heapq.nlargest\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">heapq.nlargest()</span></code></a> ve <a class=\"reference internal\" href=\"library/itertools.html#itertools.groupby\" title=\"itertools.groupby\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">itertools.groupby()</span></code></a>.</p>\n<p>Bir tu\u015f fonksiyonu olu\u015fturman\u0131n birka\u00e7 yolu vard\u0131r.  \u00d6rne\u011fin. <a class=\"reference internal\" href=\"library/stdtypes.html#str.lower\" title=\"str.lower\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">str.lower()</span></code></a> y\u00f6ntemi, b\u00fcy\u00fck/k\u00fc\u00e7\u00fck harfe duyarl\u0131 olmayan s\u0131ralamalar i\u00e7in bir anahtar fonksiyonu i\u015flevi g\u00f6rebilir.  Alternatif olarak, <code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span> <span class=\"pre\">r:</span> <span class=\"pre\">(r[0],</span> <span class=\"pre\">r[2])</span></code> gibi bir <a class=\"reference internal\" href=\"reference/expressions.html#lambda\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">lambda</span></code></a> ifadesinden bir anahtar i\u015flevi olu\u015fturulabilir.  Ayr\u0131ca, <a class=\"reference internal\" href=\"library/operator.html#operator.attrgetter\" title=\"operator.attrgetter\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">attrgetter()</span></code></a>, <a class=\"reference internal\" href=\"library/operator.html#operator.itemgetter\" title=\"operator.itemgetter\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">itemgetter()</span></code></a> ve <a class=\"reference internal\" href=\"library/operator.html#operator.methodcaller\" title=\"operator.methodcaller\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">methodcaller()</span></code></a> fonksiyonlar\u0131 \u00fc\u00e7 anahtar fonksiyon kurucular\u0131d\u0131r.  Anahtar i\u015flevlerin nas\u0131l olu\u015fturulaca\u011f\u0131 ve kullan\u0131laca\u011f\u0131na ili\u015fkin \u00f6rnekler i\u00e7in <a class=\"reference internal\" href=\"howto/sorting.html#sortinghowto\"><span class=\"std std-ref\">Sorting HOW TO</span></a> b\u00f6l\u00fcm\u00fcne bak\u0131n.</p>\n</dd>\n</main>\n"}, "anahtar kelime arg\u00fcman\u0131": {"title": "anahtar kelime arg\u00fcman\u0131", "body": "<main>\n<dd><p>Bak\u0131n\u0131z <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">argument</span></a>.</p>\n</dd>\n</main>\n"}, "lambda": {"title": "lambda", "body": "<main>\n<dd><p>\u0130\u015flev \u00e7a\u011fr\u0131ld\u0131\u011f\u0131nda de\u011ferlendirilen tek bir <a class=\"reference internal\" href=\"#term-expression\"><span class=\"xref std std-term\">expression</span></a> \u2018dan olu\u015fan anonim bir sat\u0131r i\u00e7i i\u015flev.  Bir lambda i\u015flevi olu\u015fturmak i\u00e7in s\u00f6zdizimi <code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span> <span class=\"pre\">[parametreler]:</span> <span class=\"pre\">ifade</span></code> \u015feklindedir</p>\n</dd>\n</main>\n"}, "lbyl": {"title": "LBYL", "body": "<main>\n<dd><p>Z\u0131plamadan \u00f6nce Bak.  Bu kodlama stili, arama veya arama yapmadan \u00f6nce \u00f6n ko\u015fullar\u0131 a\u00e7\u0131k\u00e7a test eder.  Bu stil, <a class=\"reference internal\" href=\"#term-EAFP\"><span class=\"xref std std-term\">EAFP</span></a> yakla\u015f\u0131m\u0131yla \u00e7eli\u015fir ve bir\u00e7ok <a class=\"reference internal\" href=\"reference/compound_stmts.html#if\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">if</span></code></a> ifadesinin varl\u0131\u011f\u0131 ile karakterize edilir.</p>\n<p>\u00c7ok i\u015f par\u00e7ac\u0131kl\u0131 bir ortamda, LBYL yakla\u015f\u0131m\u0131 \u201cbakan\u201d ve \u201cs\u0131\u00e7rayan\u201d aras\u0131nda bir yar\u0131\u015f ko\u015fulu getirme riskini ta\u015f\u0131yabilir.  \u00d6rne\u011fin, <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span> <span class=\"pre\">key</span> <span class=\"pre\">in</span> <span class=\"pre\">mapping:</span> <span class=\"pre\">return</span> <span class=\"pre\">mapping[key]</span></code> kodu, testten sonra, ancak aramadan \u00f6nce ba\u015fka bir i\u015f par\u00e7ac\u0131\u011f\u0131 <em>e\u015flemeden</em> <em>key</em> kald\u0131r\u0131rsa ba\u015far\u0131s\u0131z olabilir. Bu sorun, kilitlerle veya EAFP yakla\u015f\u0131m\u0131 kullan\u0131larak \u00e7\u00f6z\u00fclebilir.</p>\n</dd>\n</main>\n"}, "yerel kodlama": {"title": "yerel kodlama", "body": "<main>\n<dd><p>Unix\u2019te, LC_CTYPE yerel ayar\u0131n\u0131n kodlamas\u0131d\u0131r. <a class=\"reference internal\" href=\"library/locale.html#locale.setlocale\" title=\"locale.setlocale\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">locale.setlocale(locale.LC_CTYPE,</span> <span class=\"pre\">new_locale)</span></code></a> ile ayarlanabilir.</p>\n<p>Windows\u2019ta bu, ANSI kod sayfas\u0131d\u0131r (\u00f6r. <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;cp1252&quot;</span></code>).</p>\n<p>Android ve VxWorks\u2019te Python, yerel kodlama olarak <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;utf-8&quot;</span></code> kullan\u0131r.</p>\n<p>Yerel kodlamay\u0131 almak i\u00e7in <code class=\"docutils literal notranslate\"><span class=\"pre\">locale.getencoding()</span></code> kullan\u0131labilir.</p>\n<p>Ayr\u0131ca <a class=\"reference internal\" href=\"#term-filesystem-encoding-and-error-handler\"><span class=\"xref std std-term\">filesystem encoding and error handler</span></a> \u2018ne bak\u0131n.</p>\n</dd>\n</main>\n"}, "liste": {"title": "liste", "body": "<main>\n<dd><p>Yerle\u015fik bir Python <a class=\"reference internal\" href=\"#term-sequence\"><span class=\"xref std std-term\">dizi</span></a>.  Ad\u0131na ra\u011fmen, \u00f6\u011felere eri\u015fim O(1) oldu\u011fundan, di\u011fer dillerdeki bir diziye, ba\u011flant\u0131l\u0131 bir listeden daha yak\u0131nd\u0131r.</p>\n</dd>\n</main>\n"}, "liste anlama": {"title": "liste anlama", "body": "<main>\n<dd><p>Bir dizideki \u00f6\u011felerin t\u00fcm\u00fcn\u00fc veya bir k\u0131sm\u0131n\u0131 i\u015flemenin ve sonu\u00e7lar\u0131 i\u00e7eren bir liste d\u00f6nd\u00fcrmenin kompakt bir yolu.  <code class=\"docutils literal notranslate\"><span class=\"pre\">sonu\u00e7</span> <span class=\"pre\">=</span> <span class=\"pre\">['{:#04x}'.format(x)</span> <span class=\"pre\">for</span> <span class=\"pre\">range(256)</span> <span class=\"pre\">if</span> <span class=\"pre\">x</span> <span class=\"pre\">%</span> <span class=\"pre\">2</span> <span class=\"pre\">==</span> <span class=\"pre\">0]</span></code>, dizinde \u00e7ift onalt\u0131l\u0131k say\u0131lar (0x..) i\u00e7eren bir diziler listesi olu\u015fturur. 0 ile 255 aras\u0131ndad\u0131r. <a class=\"reference internal\" href=\"reference/compound_stmts.html#if\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">if</span></code></a> yan t\u00fcmcesi iste\u011fe ba\u011fl\u0131d\u0131r.  Atlan\u0131rsa, \u201caral\u0131k(256)\u201d i\u00e7indeki t\u00fcm \u00f6\u011feler i\u015flenir.</p>\n</dd>\n</main>\n"}, "y\u00fckleyici": {"title": "y\u00fckleyici", "body": "<main>\n<dd><p>Mod\u00fcl y\u00fckleyen bir nesne. <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">load_module()</span></code> ad\u0131nda bir y\u00f6ntem tan\u0131mlamal\u0131d\u0131r. Bir y\u00fckleyici genellikle bir <a class=\"reference internal\" href=\"#term-finder\"><span class=\"xref std std-term\">finder</span></a> ile d\u00f6nd\u00fcr\u00fcl\u00fcr. Ayr\u0131nt\u0131lar i\u00e7in <span class=\"target\" id=\"index-99\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0302/\"><strong>PEP 302</strong></a> ve bir <a class=\"reference internal\" href=\"#term-abstract-base-class\"><span class=\"xref std std-term\">soyut temel s\u0131n\u0131f</span></a> i\u00e7in <a class=\"reference internal\" href=\"library/importlib.html#importlib.abc.Loader\" title=\"importlib.abc.Loader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">importlib.abc.Loader</span></code></a> b\u00f6l\u00fcm\u00fcne bak\u0131n.</p>\n</dd>\n</main>\n"}, "sihirli y\u00f6ntem": {"title": "sihirli y\u00f6ntem", "body": "<main>\n<dd><p id=\"index-26\"><a class=\"reference internal\" href=\"#term-special-method\"><span class=\"xref std std-term\">special method</span></a> i\u00e7in gayri resmi bir e\u015fanlaml\u0131.</p>\n</dd>\n</main>\n"}, "haritalama": {"title": "haritalama", "body": "<main>\n<dd><p>Keyfi anahtar aramalar\u0131n\u0131 destekleyen ve <a class=\"reference internal\" href=\"library/collections.abc.html#collections.abc.Mapping\" title=\"collections.abc.Mapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mapping</span></code></a> veya <a class=\"reference internal\" href=\"library/collections.abc.html#collections.abc.MutableMapping\" title=\"collections.abc.MutableMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MutableMapping</span></code></a> <a class=\"reference internal\" href=\"library/collections.abc.html#collections-abstract-base-classes\"><span class=\"std std-ref\">Collections Abstract Base Classes</span></a> i\u00e7inde belirtilen y\u00f6ntemleri uygulayan bir kapsay\u0131c\u0131 nesnesi. \u00d6rnekler aras\u0131nda <a class=\"reference internal\" href=\"library/stdtypes.html#dict\" title=\"dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a>, <a class=\"reference internal\" href=\"library/collections.html#collections.defaultdict\" title=\"collections.defaultdict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">collections.defaultdict</span></code></a>, <a class=\"reference internal\" href=\"library/collections.html#collections.OrderedDict\" title=\"collections.OrderedDict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">collections.OrderedDict</span></code></a> ve <a class=\"reference internal\" href=\"library/collections.html#collections.Counter\" title=\"collections.Counter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">collections.Counter</span></code></a> say\u0131labilir.</p>\n</dd>\n</main>\n"}, "meta yol bulucu": {"title": "meta yol bulucu", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-finder\"><span class=\"xref std std-term\">finder</span></a>, <a class=\"reference internal\" href=\"library/sys.html#sys.meta_path\" title=\"sys.meta_path\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.meta_path</span></code></a> aramas\u0131yla d\u00f6nd\u00fcr\u00fcl\u00fcr.  Meta yol bulucular, <a class=\"reference internal\" href=\"#term-path-entry-finder\"><span class=\"xref std std-term\">yol giri\u015fi bulucular\u0131</span></a> ile ili\u015fkilidir, ancak onlardan farkl\u0131d\u0131r.</p>\n<p>Meta yol bulucular\u0131n uygulad\u0131\u011f\u0131 y\u00f6ntemler i\u00e7in <a class=\"reference internal\" href=\"library/importlib.html#importlib.abc.MetaPathFinder\" title=\"importlib.abc.MetaPathFinder\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">importlib.abc.MetaPathFinder</span></code></a> b\u00f6l\u00fcm\u00fcne bak\u0131n.</p>\n</dd>\n</main>\n"}, "metas\u0131n\u0131f": {"title": "metas\u0131n\u0131f", "body": "<main>\n<dd><p>Bir s\u0131n\u0131f\u0131n s\u0131n\u0131f\u0131.  S\u0131n\u0131f tan\u0131mlar\u0131, bir s\u0131n\u0131f ad\u0131, bir s\u0131n\u0131f s\u00f6zl\u00fc\u011f\u00fc ve temel s\u0131n\u0131flar\u0131n bir listesini olu\u015fturur.  Metas\u0131n\u0131f, bu \u00fc\u00e7 arg\u00fcman\u0131 almaktan ve s\u0131n\u0131f\u0131 olu\u015fturmaktan sorumludur. \u00c7o\u011fu nesne y\u00f6nelimli programlama dili, varsay\u0131lan bir uygulama sa\u011flar.  Python\u2019u \u00f6zel yapan \u015fey, \u00f6zel metas\u0131n\u0131flar olu\u015fturman\u0131n m\u00fcmk\u00fcn olmas\u0131d\u0131r. \u00c7o\u011fu kullan\u0131c\u0131 bu araca hi\u00e7bir zaman ihtiya\u00e7 duymaz, ancak ihtiya\u00e7 duyuldu\u011funda, metas\u0131n\u0131flar g\u00fc\u00e7l\u00fc ve zarif \u00e7\u00f6z\u00fcmler sa\u011flayabilir.  Nitelik eri\u015fimini g\u00fcnl\u00fc\u011fe kaydetmek, i\u015f par\u00e7ac\u0131\u011f\u0131 g\u00fcvenli\u011fi eklemek, nesne olu\u015fturmay\u0131 izlemek, tekilleri uygulamak ve di\u011fer bir\u00e7ok g\u00f6rev i\u00e7in kullan\u0131lm\u0131\u015flard\u0131r.</p>\n<p>Daha fazla bilgi <a class=\"reference internal\" href=\"reference/datamodel.html#metaclasses\"><span class=\"std std-ref\">Metaclasses</span></a> i\u00e7inde bulunabilir.</p>\n</dd>\n</main>\n"}, "metot": {"title": "metot", "body": "<main>\n<dd><p>Bir s\u0131n\u0131f g\u00f6vdesi i\u00e7inde tan\u0131mlanan bir i\u015flev. Bu s\u0131n\u0131f\u0131n bir \u00f6rne\u011finin \u00f6zniteli\u011fi olarak \u00e7a\u011fr\u0131l\u0131rsa, y\u00f6ntem \u00f6rnek nesnesini ilk <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">argument</span></a> (genellikle <code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code> olarak adland\u0131r\u0131l\u0131r) olarak al\u0131r. Bkz. <a class=\"reference internal\" href=\"#term-function\"><span class=\"xref std std-term\">function</span></a> ve <a class=\"reference internal\" href=\"#term-nested-scope\"><span class=\"xref std std-term\">nested scope</span></a>.</p>\n</dd>\n</main>\n"}, "metot kalite s\u0131ralamas\u0131": {"title": "metot kalite s\u0131ralamas\u0131", "body": "<main>\n<dd><p>Metot \u00c7\u00f6z\u00fcm S\u0131ras\u0131, arama s\u0131ras\u0131nda bir \u00fcye i\u00e7in temel s\u0131n\u0131flar\u0131n arand\u0131\u011f\u0131 s\u0131rad\u0131r. 2.3 s\u00fcr\u00fcm\u00fcnden bu yana Python yorumlay\u0131c\u0131s\u0131 taraf\u0131ndan kullan\u0131lan algoritman\u0131n ayr\u0131nt\u0131lar\u0131 i\u00e7in bkz. <a class=\"reference external\" href=\"https://www.python.org/download/releases/2.3/mro/\">The Python 2.3 Method Resolution Order</a>.</p>\n</dd>\n</main>\n"}, "mod\u00fcl": {"title": "mod\u00fcl", "body": "<main>\n<dd><p>Python kodunun kurulu\u015f birimi olarak hizmet eden bir nesne. Mod\u00fcller, rastgele Python nesneleri i\u00e7eren bir ad alan\u0131na sahiptir. Mod\u00fcller, <a class=\"reference internal\" href=\"#term-importing\"><span class=\"xref std std-term\">importing</span></a> i\u015flemiyle Python\u2019a y\u00fcklenir.</p>\n<p>Ayr\u0131ca bak\u0131n\u0131z <a class=\"reference internal\" href=\"#term-package\"><span class=\"xref std std-term\">package</span></a>.</p>\n</dd>\n</main>\n"}, "mod\u00fcl \u00f6zelli\u011fi": {"title": "mod\u00fcl \u00f6zelli\u011fi", "body": "<main>\n<dd><p>Bir mod\u00fcl\u00fc y\u00fcklemek i\u00e7in kullan\u0131lan i\u00e7e aktarmayla ilgili bilgileri i\u00e7eren bir ad alan\u0131. Bir <a class=\"reference internal\" href=\"library/importlib.html#importlib.machinery.ModuleSpec\" title=\"importlib.machinery.ModuleSpec\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">importlib.machinery.ModuleSpec</span></code></a> \u00f6rne\u011fi.</p>\n</dd>\n</main>\n"}, "mro": {"title": "MRO", "body": "<main>\n<dd><p>Bak\u0131n\u0131z <a class=\"reference internal\" href=\"#term-method-resolution-order\"><span class=\"xref std std-term\">metot \u00e7\u00f6z\u00fcm s\u0131ras\u0131</span></a>.</p>\n</dd>\n</main>\n"}, "de\u011fi\u015ftirilebilir": {"title": "de\u011fi\u015ftirilebilir", "body": "<main>\n<dd><p>De\u011fi\u015ftirilebilir (mutable) nesneler de\u011ferlerini de\u011fi\u015ftirebilir ancak <a class=\"reference internal\" href=\"library/functions.html#id\" title=\"id\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">idlerini</span></code></a> koruyabilirler. Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-immutable\"><span class=\"xref std std-term\">immutable</span></a>.</p>\n</dd>\n</main>\n"}, "adland\u0131r\u0131lm\u0131\u015f demet": {"title": "adland\u0131r\u0131lm\u0131\u015f demet", "body": "<main>\n<dd><p>\u201cnamed tuple\u201d terimi, demetten miras alan ve dizinlenebilir \u00f6\u011felerine de adland\u0131r\u0131lm\u0131\u015f nitelikler kullan\u0131larak eri\u015filebilen herhangi bir t\u00fcr veya s\u0131n\u0131f i\u00e7in ge\u00e7erlidir. T\u00fcr veya s\u0131n\u0131f\u0131n ba\u015fka \u00f6zellikleri de olabilir.</p>\n<p>\u00c7e\u015fitli yerle\u015fik t\u00fcrler, <a class=\"reference internal\" href=\"library/time.html#time.localtime\" title=\"time.localtime\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">time.localtime()</span></code></a> ve <a class=\"reference internal\" href=\"library/os.html#os.stat\" title=\"os.stat\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">os.stat()</span></code></a> taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen de\u011ferler de dahil olmak \u00fczere, tan\u0131mlama gruplar\u0131 olarak adland\u0131r\u0131l\u0131r. Ba\u015fka bir \u00f6rnek <a class=\"reference internal\" href=\"library/sys.html#sys.float_info\" title=\"sys.float_info\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.float_info</span></code></a>:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">float_info</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>                   <span class=\"c1\"># indexed access</span>\n<span class=\"go\">1024</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">float_info</span><span class=\"o\">.</span><span class=\"n\">max_exp</span>              <span class=\"c1\"># named field access</span>\n<span class=\"go\">1024</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">float_info</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)</span>   <span class=\"c1\"># kind of tuple</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p>Baz\u0131 adland\u0131r\u0131lm\u0131\u015f demetler yerle\u015fik t\u00fcrlerdir (yukar\u0131daki \u00f6rnekler gibi). Alternatif olarak, <a class=\"reference internal\" href=\"library/stdtypes.html#tuple\" title=\"tuple\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tuple</span></code></a> \u00f6\u011fesinden miras alan ve adland\u0131r\u0131lm\u0131\u015f alanlar\u0131 tan\u0131mlayan normal bir s\u0131n\u0131f tan\u0131m\u0131ndan adland\u0131r\u0131lm\u0131\u015f bir tan\u0131mlama grubu olu\u015fturulabilir. B\u00f6yle bir s\u0131n\u0131f elle yaz\u0131labilir veya fabrika i\u015flevi <a class=\"reference internal\" href=\"library/collections.html#collections.namedtuple\" title=\"collections.namedtuple\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">collections.namedtuple()</span></code></a> ile olu\u015fturulabilir. \u0130kinci teknik ayr\u0131ca elle yaz\u0131lm\u0131\u015f veya yerle\u015fik adland\u0131r\u0131lm\u0131\u015f demetlerde bulunmayan baz\u0131 ekstra y\u00f6ntemler ekler.</p>\n</dd>\n</main>\n"}, "ad alan\u0131": {"title": "ad alan\u0131", "body": "<main>\n<dd><p>De\u011fi\u015fkenin sakland\u0131\u011f\u0131 yer. Ad alanlar\u0131 s\u00f6zl\u00fckler olarak uygulan\u0131r. Nesnelerde (y\u00f6ntemlerde) yerel, genel ve yerle\u015fik ad alanlar\u0131n\u0131n yan\u0131 s\u0131ra i\u00e7 i\u00e7e ad alanlar\u0131 vard\u0131r. Ad alanlar\u0131, adland\u0131rma \u00e7ak\u0131\u015fmalar\u0131n\u0131 \u00f6nleyerek mod\u00fclerli\u011fi destekler. \u00d6rne\u011fin, <a class=\"reference internal\" href=\"library/functions.html#open\" title=\"open\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">builtins.open</span></code></a> ve <a class=\"reference internal\" href=\"library/os.html#os.open\" title=\"os.open\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">os.open()</span></code></a> i\u015flevleri ad alanlar\u0131yla ay\u0131rt edilir. Ad alanlar\u0131, hangi mod\u00fcl\u00fcn bir i\u015flevi uygulad\u0131\u011f\u0131n\u0131 a\u00e7\u0131k\u00e7a belirterek okunabilirli\u011fe ve s\u00fcrd\u00fcr\u00fclebilirli\u011fe de yard\u0131mc\u0131 olur. \u00d6rne\u011fin, <a class=\"reference internal\" href=\"library/random.html#random.seed\" title=\"random.seed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">random.seed()</span></code></a> veya <a class=\"reference internal\" href=\"library/itertools.html#itertools.islice\" title=\"itertools.islice\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">itertools.islice()</span></code></a> yazmak, bu i\u015flevlerin s\u0131ras\u0131yla <a class=\"reference internal\" href=\"library/random.html#module-random\" title=\"random: Generate pseudo-random numbers with various common distributions.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code></a> ve <a class=\"reference internal\" href=\"library/itertools.html#module-itertools\" title=\"itertools: Functions creating iterators for efficient looping.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">itertools</span></code></a> mod\u00fclleri taraf\u0131ndan uyguland\u0131\u011f\u0131n\u0131 a\u00e7\u0131k\u00e7a g\u00f6sterir.</p>\n</dd>\n</main>\n"}, "ad alan\u0131 paketi": {"title": "ad alan\u0131 paketi", "body": "<main>\n<dd><p>A <span class=\"target\" id=\"index-100\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0420/\"><strong>PEP 420</strong></a> <a class=\"reference internal\" href=\"#term-package\"><span class=\"xref std std-term\">package</span></a>, yaln\u0131zca alt paketler i\u00e7in bir kap olarak hizmet eder. Ad alan\u0131 paketlerinin hi\u00e7bir fiziksel temsili olmayabilir ve <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__.py</span></code> dosyas\u0131 olmad\u0131\u011f\u0131ndan \u00f6zellikle <a class=\"reference internal\" href=\"#term-regular-package\"><span class=\"xref std std-term\">regular package</span></a> gibi de\u011fildirler.</p>\n<p>Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-module\"><span class=\"xref std std-term\">module</span></a>.</p>\n</dd>\n</main>\n"}, "i\u00e7 i\u00e7e kapsam": {"title": "i\u00e7 i\u00e7e kapsam", "body": "<main>\n<dd><p>Kapsaml\u0131 bir tan\u0131mdaki bir de\u011fi\u015fkene at\u0131fta bulunma yetene\u011fi. \u00d6rne\u011fin, ba\u015fka bir fonksiyonun i\u00e7inde tan\u0131mlanan bir fonksiyon, d\u0131\u015f fonksiyondaki de\u011fi\u015fkenlere at\u0131fta bulunabilir. \u0130\u00e7 i\u00e7e kapsamlar\u0131n varsay\u0131lan olarak yaln\u0131zca ba\u015fvuru i\u00e7in \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ve atama i\u00e7in \u00e7al\u0131\u015fmad\u0131\u011f\u0131n\u0131 unutmay\u0131n. Yerel de\u011fi\u015fkenler en i\u00e7teki kapsamda hem okur hem de yazar. Benzer \u015fekilde, global de\u011fi\u015fkenler global ad alan\u0131n\u0131 okur ve yazar. <a class=\"reference internal\" href=\"reference/simple_stmts.html#nonlocal\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">nonlocal</span></code></a>, d\u0131\u015f kapsamlara yazmaya izin verir.</p>\n</dd>\n</main>\n"}, "yeni stil s\u0131n\u0131f": {"title": "yeni stil s\u0131n\u0131f", "body": "<main>\n<dd><p>Art\u0131k t\u00fcm s\u0131n\u0131f nesneleri i\u00e7in kullan\u0131lan s\u0131n\u0131flar\u0131n lezzetinin eski ad\u0131. \u00d6nceki Python s\u00fcr\u00fcmlerinde, yaln\u0131zca yeni stil s\u0131n\u0131flar\u0131 Python\u2019un <a class=\"reference internal\" href=\"reference/datamodel.html#object.__slots__\" title=\"object.__slots__\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">__slots__</span></code></a>, tan\u0131mlay\u0131c\u0131lar, \u00f6zellikler, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__getattribute__()</span></code>, s\u0131n\u0131f y\u00f6ntemleri ve statik y\u00f6ntemler gibi daha yeni, \u00e7ok y\u00f6nl\u00fc \u00f6zelliklerini kullanabilirdi.</p>\n</dd>\n</main>\n"}, "obje": {"title": "obje", "body": "<main>\n<dd><p>Durum (\u00f6znitelikler veya de\u011fer) ve tan\u0131mlanm\u0131\u015f davran\u0131\u015f (y\u00f6ntemler) i\u00e7eren herhangi bir veri. Ayr\u0131ca herhangi bir <a class=\"reference internal\" href=\"#term-new-style-class\"><span class=\"xref std std-term\">yeni tarz s\u0131n\u0131f\u0131n</span></a> nihai temel s\u0131n\u0131f\u0131.</p>\n</dd>\n</main>\n"}, "paket": {"title": "paket", "body": "<main>\n<dd><p>Alt mod\u00fcller veya yinelemeli olarak alt paketler i\u00e7erebilen bir Python <a class=\"reference internal\" href=\"#term-module\"><span class=\"xref std std-term\">module</span></a>. Teknik olarak bir paket, <code class=\"docutils literal notranslate\"><span class=\"pre\">__path__</span></code> \u00f6zniteli\u011fine sahip bir Python mod\u00fcl\u00fcd\u00fcr.</p>\n<p>Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-regular-package\"><span class=\"xref std std-term\">regular package</span></a> ve <a class=\"reference internal\" href=\"#term-namespace-package\"><span class=\"xref std std-term\">namespace package</span></a>.</p>\n</dd>\n</main>\n"}, "parametre": {"title": "parametre", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-function\"><span class=\"xref std std-term\">function</span></a> (veya y\u00f6ntem) tan\u0131m\u0131nda, i\u015flevin kabul edebilece\u011fi bir <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">argument</span></a> (veya baz\u0131 durumlarda, arg\u00fcmanlar) belirten adland\u0131r\u0131lm\u0131\u015f bir varl\u0131k.  Be\u015f \u00e7e\u015fit parametre vard\u0131r:</p>\n<ul>\n<li><p><em class=\"dfn\">positional-or-keyword</em>: <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">pozisyonel</span></a> veya bir <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">keyword arg\u00fcman\u0131</span></a> olarak iletilebilen bir arg\u00fcman belirtir. Bu, varsay\u0131lan parametre t\u00fcr\u00fcd\u00fcr, \u00f6rne\u011fin a\u015fa\u011f\u0131dakilerde <em>foo</em> ve <em>bar</em>:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">,</span> <span class=\"n\">bar</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n</ul>\n<ul id=\"positional-only-parameter\">\n<li><p><em class=\"dfn\">positional-only</em>: yaln\u0131zca konuma g\u00f6re sa\u011flanabilen bir arg\u00fcman belirtir. Yaln\u0131zca konumsal parametreler, onlardan sonra fonksiyon tan\u0131m\u0131n\u0131n parametre listesine bir <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code> karakteri eklenerek tan\u0131mlanabilir, \u00f6rne\u011fin a\u015fa\u011f\u0131dakilerde <em>posonly1</em> ve <em>posonly2</em>:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">posonly1</span><span class=\"p\">,</span> <span class=\"n\">posonly2</span><span class=\"p\">,</span> <span class=\"o\">/</span><span class=\"p\">,</span> <span class=\"n\">positional_or_keyword</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n</ul>\n<ul id=\"keyword-only-parameter\">\n<li><p><em class=\"dfn\">keyword-only</em>: sadece anahtar kelime ile sa\u011flanabilen bir arg\u00fcman belirtir. Yaln\u0131zca anahtar kelime (keyword-only) parametreleri, onlardan \u00f6nceki fonksiyon tan\u0131m\u0131n\u0131n parametre listesine tek bir de\u011fi\u015fken konumlu parametre veya \u00e7\u0131plak <code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code> dahil edilerek tan\u0131mlanabilir, \u00f6rne\u011fin a\u015fa\u011f\u0131dakilerde <em>kw_only1</em> ve <em>kw_only2</em>:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">kw_only1</span><span class=\"p\">,</span> <span class=\"n\">kw_only2</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n<li><p><em class=\"dfn\">var-positional</em>: keyfi bir pozisyonel arg\u00fcman dizisinin sa\u011flanabilece\u011fini belirtir (di\u011fer parametreler taraf\u0131ndan zaten kabul edilmi\u015f herhangi bir konumsal arg\u00fcmana ek olarak). B\u00f6yle bir parametre, parametre ad\u0131n\u0131n ba\u015f\u0131na <code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code> eklenerek tan\u0131mlanabilir, \u00f6rne\u011fin a\u015fa\u011f\u0131dakilerde <em>args</em>:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n<li><p><em class=\"dfn\">var-keyword</em>: keyfi olarak bir\u00e7ok anahtar kelime arg\u00fcman\u0131n\u0131n sa\u011flanabilece\u011fini belirtir (di\u011fer parametreler taraf\u0131ndan zaten kabul edilen herhangi bir anahtar kelime arg\u00fcman\u0131na ek olarak). B\u00f6yle bir parametre, parametre ad\u0131n\u0131n ba\u015f\u0131na <code class=\"docutils literal notranslate\"><span class=\"pre\">**</span></code>, \u00f6rne\u011fin yukar\u0131daki \u00f6rnekte <em>kwargs</em> eklenerek tan\u0131mlanabilir.</p></li>\n</ul>\n<p>Parametreler, hem iste\u011fe ba\u011fl\u0131 hem de gerekli arg\u00fcmanleri ve ayr\u0131ca baz\u0131 iste\u011fe ba\u011fl\u0131 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler i\u00e7in varsay\u0131lan de\u011ferleri belirtebilir.</p>\n<p>Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">arg\u00fcman</span></a>, <a class=\"reference internal\" href=\"faq/programming.html#faq-argument-vs-parameter\"><span class=\"std std-ref\">arg\u00fcmanlar ve parametreler aras\u0131ndaki fark</span></a>, <a class=\"reference internal\" href=\"library/inspect.html#inspect.Parameter\" title=\"inspect.Parameter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">inspect.Parameter</span></code></a>, <a class=\"reference internal\" href=\"reference/compound_stmts.html#function\"><span class=\"std std-ref\">Function definitions</span></a> ve <span class=\"target\" id=\"index-101\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0362/\"><strong>PEP 362</strong></a>.</p>\n</dd>\n</main>\n"}, "yol giri\u015fi": {"title": "yol giri\u015fi", "body": "<main>\n<dd><p><a class=\"reference internal\" href=\"#term-path-based-finder\"><span class=\"xref std std-term\">path based finder</span></a> i\u00e7e aktarma mod\u00fcllerini bulmak i\u00e7in ba\u015fvurdu\u011fu <a class=\"reference internal\" href=\"#term-import-path\"><span class=\"xref std std-term\">import path</span></a> \u00fczerindeki tek bir konum.</p>\n</dd>\n</main>\n"}, "yol giri\u015fi bulucu": {"title": "yol giri\u015fi bulucu", "body": "<main>\n<dd><p>Bir <a class=\"reference internal\" href=\"#term-finder\"><span class=\"xref std std-term\">finder</span></a> <a class=\"reference internal\" href=\"library/sys.html#sys.path_hooks\" title=\"sys.path_hooks\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path_hooks</span></code></a> (yani bir <a class=\"reference internal\" href=\"#term-path-entry-hook\"><span class=\"xref std std-term\">yol giri\u015f kancas\u0131</span></a>) \u00fczerinde bir \u00e7a\u011fr\u0131labilir taraf\u0131ndan d\u00f6nd\u00fcr\u00fcl\u00fcr ve <a class=\"reference internal\" href=\"#term-path-entry\"><span class=\"xref std std-term\">path entry</span></a> verilen mod\u00fcllerin nas\u0131l bulunaca\u011f\u0131n\u0131 bilir.</p>\n<p>Yol giri\u015fi bulucular\u0131n\u0131n uygulad\u0131\u011f\u0131 y\u00f6ntemler i\u00e7in <a class=\"reference internal\" href=\"library/importlib.html#importlib.abc.PathEntryFinder\" title=\"importlib.abc.PathEntryFinder\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">importlib.abc.PathEntryFinder</span></code></a> b\u00f6l\u00fcm\u00fcne bak\u0131n.</p>\n</dd>\n</main>\n"}, "yol giri\u015f kancas\u0131": {"title": "yol giri\u015f kancas\u0131", "body": "<main>\n<dd><p><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path_hook</span></code> listesinde, belirli bir <a class=\"reference internal\" href=\"#term-path-entry\"><span class=\"xref std std-term\">yol giri\u015findeki</span></a> mod\u00fclleri nas\u0131l bulaca\u011f\u0131n\u0131 biliyorsa, bir <a class=\"reference internal\" href=\"#term-path-entry-finder\"><span class=\"xref std std-term\">yol giri\u015fi bulucu</span></a> d\u00f6nd\u00fcren bir \u00e7a\u011fr\u0131labilir.</p>\n</dd>\n</main>\n"}, "yol tabanl\u0131 bulucu": {"title": "yol tabanl\u0131 bulucu", "body": "<main>\n<dd><p>Mod\u00fcller i\u00e7in bir <a class=\"reference internal\" href=\"#term-import-path\"><span class=\"xref std std-term\">import path</span></a> arayan varsay\u0131lan <a class=\"reference internal\" href=\"#term-meta-path-finder\"><span class=\"xref std std-term\">meta yol buluculardan</span></a> biri.</p>\n</dd>\n</main>\n"}, "yol benzeri nesne": {"title": "yol benzeri nesne", "body": "<main>\n<dd><p>Bir dosya sistemi yolunu temsil eden bir nesne. Yol benzeri bir nesne, bir yolu temsil eden bir <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a> veya <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a> nesnesi veya <a class=\"reference internal\" href=\"library/os.html#os.PathLike\" title=\"os.PathLike\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">os.PathLike</span></code></a> protokol\u00fcn\u00fc uygulayan bir nesnedir. <a class=\"reference internal\" href=\"library/os.html#os.PathLike\" title=\"os.PathLike\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">os.PathLike</span></code></a> protokol\u00fcn\u00fc destekleyen bir nesne, <a class=\"reference internal\" href=\"library/os.html#os.fspath\" title=\"os.fspath\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">os.fspath()</span></code></a> i\u015flevi \u00e7a\u011fr\u0131larak bir <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a> veya <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a> dosya sistemi yoluna d\u00f6n\u00fc\u015ft\u00fcr\u00fclebilir; <a class=\"reference internal\" href=\"library/os.html#os.fsdecode\" title=\"os.fsdecode\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">os.fsdecode()</span></code></a> ve <a class=\"reference internal\" href=\"library/os.html#os.fsencode\" title=\"os.fsencode\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">os.fsencode()</span></code></a>, bunun yerine s\u0131ras\u0131yla <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a> veya <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a> sonucunu garanti etmek i\u00e7in kullan\u0131labilir. <span class=\"target\" id=\"index-102\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0519/\"><strong>PEP 519</strong></a> taraf\u0131ndan tan\u0131t\u0131ld\u0131.</p>\n</dd>\n</main>\n"}, "pep": {"title": "PEP", "body": "<main>\n<dd><p>Python Geli\u015ftirme \u00d6nerisi. PEP, Python toplulu\u011funa bilgi sa\u011flayan veya Python veya s\u00fcre\u00e7leri ya da ortam\u0131 i\u00e7in yeni bir \u00f6zelli\u011fi a\u00e7\u0131klayan bir tasar\u0131m belgesidir. PEP\u2019ler, \u00f6nerilen \u00f6zellikler i\u00e7in \u00f6zl\u00fc bir teknik \u015fartname ve bir gerek\u00e7e sa\u011flamal\u0131d\u0131r.</p>\n<p>PEP\u2019lerin, \u00f6nemli yeni \u00f6zellikler \u00f6nermek, bir sorun hakk\u0131nda topluluk girdisi toplamak ve Python\u2019a giren tasar\u0131m kararlar\u0131n\u0131 belgelemek i\u00e7in birincil mekanizmalar olmas\u0131 ama\u00e7lanm\u0131\u015ft\u0131r. PEP yazar\u0131, topluluk i\u00e7inde fikir birli\u011fi olu\u015fturmaktan ve muhalif g\u00f6r\u00fc\u015fleri belgelemekten sorumludur.</p>\n<p>Bak\u0131n\u0131z <span class=\"target\" id=\"index-103\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0001/\"><strong>PEP 1</strong></a>.</p>\n</dd>\n</main>\n"}, "k\u0131s\u0131m": {"title": "k\u0131s\u0131m", "body": "<main>\n<dd><p><span class=\"target\" id=\"index-104\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0420/\"><strong>PEP 420</strong></a> i\u00e7inde tan\u0131mland\u0131\u011f\u0131 gibi, bir ad alan\u0131 paketine katk\u0131da bulunan tek bir dizindeki (muhtemelen bir zip dosyas\u0131nda depolanan) bir dizi dosya.</p>\n</dd>\n</main>\n"}, "konumsal arg\u00fcman": {"title": "konumsal arg\u00fcman", "body": "<main>\n<dd><p>Bak\u0131n\u0131z <a class=\"reference internal\" href=\"#term-argument\"><span class=\"xref std std-term\">argument</span></a>.</p>\n</dd>\n</main>\n"}, "ge\u00e7ici api": {"title": "ge\u00e7ici API", "body": "<main>\n<dd><p>Ge\u00e7ici bir API, standart kitapl\u0131\u011f\u0131n geriye d\u00f6n\u00fck uyumluluk garantilerinden kas\u0131tl\u0131 olarak hari\u00e7 tutulan bir API\u2019dir. Bu t\u00fcr aray\u00fczlerde b\u00fcy\u00fck de\u011fi\u015fiklikler beklenmese de, ge\u00e7ici olarak i\u015faretlendikleri s\u00fcrece, \u00e7ekirdek geli\u015ftiriciler taraf\u0131ndan gerekli g\u00f6r\u00fcld\u00fc\u011f\u00fc takdirde geriye d\u00f6n\u00fck uyumsuz de\u011fi\u015fiklikler (aray\u00fcz\u00fcn kald\u0131r\u0131lmas\u0131na kadar ve buna kadar) meydana gelebilir. Bu t\u00fcr de\u011fi\u015fiklikler kar\u015f\u0131l\u0131ks\u0131z yap\u0131lmayacakt\u0131r - bunlar yaln\u0131zca API\u2019nin eklenmesinden \u00f6nce g\u00f6zden ka\u00e7an ciddi temel kusurlar ortaya \u00e7\u0131karsa ger\u00e7ekle\u015fecektir.</p>\n<p>Ge\u00e7ici API\u2019ler i\u00e7in bile, geriye d\u00f6n\u00fck uyumsuz de\u011fi\u015fiklikler \u201cson \u00e7are \u00e7\u00f6z\u00fcm\u00fc\u201d olarak g\u00f6r\u00fcl\u00fcr - tan\u0131mlanan herhangi bir soruna geriye d\u00f6n\u00fck uyumlu bir \u00e7\u00f6z\u00fcm bulmak i\u00e7in her t\u00fcrl\u00fc giri\u015fimde bulunulacakt\u0131r.</p>\n<p>Bu s\u00fcre\u00e7, standart kitapl\u0131\u011f\u0131n, uzun s\u00fcreler boyunca sorunlu tasar\u0131m hatalar\u0131na kilitlenmeden zaman i\u00e7inde geli\u015fmeye devam etmesini sa\u011flar. Daha fazla ayr\u0131nt\u0131 i\u00e7in bkz. <span class=\"target\" id=\"index-105\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0411/\"><strong>PEP 411</strong></a>.</p>\n</dd>\n</main>\n"}, "ge\u00e7ici paket": {"title": "ge\u00e7ici paket", "body": "<main>\n<dd><p>Bak\u0131n\u0131z <a class=\"reference internal\" href=\"#term-provisional-API\"><span class=\"xref std std-term\">provisional API</span></a>.</p>\n</dd>\n</main>\n"}, "python 3000": {"title": "Python 3000", "body": "<main>\n<dd><p>Python 3.x s\u00fcr\u00fcm sat\u0131r\u0131n\u0131n takma ad\u0131 (uzun zaman \u00f6nce s\u00fcr\u00fcm 3\u2019\u00fcn piyasaya s\u00fcr\u00fclmesi uzak bir gelecekte oldu\u011fu zaman ortaya \u00e7\u0131kt\u0131.) Bu ayn\u0131 zamanda \u201cPy3k\u201d olarak da k\u0131salt\u0131l\u0131r.</p>\n</dd>\n</main>\n"}, "pythonic": {"title": "Pythonic", "body": "<main>\n<dd><p>Di\u011fer dillerde ortak kavramlar\u0131 kullanarak kod uygulamak yerine Python dilinin en yayg\u0131n deyimlerini yak\u0131ndan takip eden bir fikir veya kod par\u00e7as\u0131. \u00d6rne\u011fin, Python\u2019da yayg\u0131n bir deyim, bir <a class=\"reference internal\" href=\"reference/compound_stmts.html#for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">for</span></code></a> ifadesi kullanarak yinelenebilir bir \u00f6\u011fenin t\u00fcm \u00f6\u011feleri \u00fczerinde d\u00f6ng\u00fc olu\u015fturmakt\u0131r. Di\u011fer bir\u00e7ok dilde bu t\u00fcr bir yap\u0131 yoktur, bu nedenle Python\u2019a a\u015fina olmayan ki\u015filer bazen bunun yerine say\u0131sal bir saya\u00e7 kullan\u0131r:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">food</span><span class=\"p\">)):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">food</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>Temizleyicinin aksine, Pythonic y\u00f6ntemi:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">piece</span> <span class=\"ow\">in</span> <span class=\"n\">food</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">piece</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd>\n</main>\n"}, "nitelikli isim": {"title": "nitelikli isim", "body": "<main>\n<dd><p><span class=\"target\" id=\"index-106\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-3155/\"><strong>PEP 3155</strong></a> i\u00e7inde tan\u0131mland\u0131\u011f\u0131 gibi, bir mod\u00fcl\u00fcn genel kapsam\u0131ndan o mod\u00fclde tan\u0131mlanan bir s\u0131n\u0131fa, i\u015fleve veya y\u00f6nteme giden \u201cyolu\u201d g\u00f6steren noktal\u0131 ad. \u00dcst d\u00fczey i\u015flevler ve s\u0131n\u0131flar i\u00e7in nitelikli ad, nesnenin ad\u0131yla ayn\u0131d\u0131r:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">class</span> <span class=\"nc\">D</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>        <span class=\"k\">def</span> <span class=\"nf\">meth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>            <span class=\"k\">pass</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span>\n<span class=\"go\">&#39;C&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">D</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span>\n<span class=\"go\">&#39;C.D&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">D</span><span class=\"o\">.</span><span class=\"n\">meth</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span>\n<span class=\"go\">&#39;C.D.meth&#39;</span>\n</pre></div>\n</div>\n<p>Mod\u00fcllere at\u0131fta bulunmak i\u00e7in kullan\u0131ld\u0131\u011f\u0131nda, <em>tam nitelenmi\u015f ad</em>, herhangi bir \u00fcst paket de dahil olmak \u00fczere, mod\u00fcle giden t\u00fcm noktal\u0131 yol anlam\u0131na gelir, \u00f6rn. <code class=\"docutils literal notranslate\"><span class=\"pre\">email.mime.text</span></code>:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">email.mime.text</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">mime</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n<span class=\"go\">&#39;email.mime.text&#39;</span>\n</pre></div>\n</div>\n</dd>\n</main>\n"}, "referans say\u0131s\u0131": {"title": "referans say\u0131s\u0131", "body": "<main>\n<dd><p>Bir nesneye yap\u0131lan ba\u015fvurular\u0131n say\u0131s\u0131. Bir nesnenin referans say\u0131s\u0131 s\u0131f\u0131ra d\u00fc\u015ft\u00fc\u011f\u00fcnde, yeniden konumland\u0131r\u0131l\u0131r. Referans say\u0131m\u0131 genellikle Python kodu taraf\u0131ndan g\u00f6r\u00fclmez, ancak <a class=\"reference internal\" href=\"#term-CPython\"><span class=\"xref std std-term\">CPython</span></a> uygulamas\u0131n\u0131n \u00f6nemli bir \u00f6\u011fesidir. Programc\u0131lar, belirli bir nesne i\u00e7in ba\u015fvuru say\u0131s\u0131n\u0131 d\u00f6nd\u00fcrmek i\u00e7in <a class=\"reference internal\" href=\"library/sys.html#sys.getrefcount\" title=\"sys.getrefcount\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sys.getrefcount()</span></code></a> i\u015flevini \u00e7a\u011f\u0131rabilir.</p>\n</dd>\n</main>\n"}, "s\u00fcrekli paketleme": {"title": "s\u00fcrekli paketleme", "body": "<main>\n<dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">__init__.py</span></code> dosyas\u0131 i\u00e7eren bir dizin gibi geleneksel bir <a class=\"reference internal\" href=\"#term-package\"><span class=\"xref std std-term\">package</span></a>.</p>\n<p>Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-namespace-package\"><span class=\"xref std std-term\">ad alan\u0131 paketi</span></a>.</p>\n</dd>\n</main>\n"}, "__slots__": {"title": "__slots__", "body": "<main>\n<dd><p>\u00d6rnek \u00f6znitelikleri i\u00e7in \u00f6nceden yer bildirerek ve \u00f6rnek s\u00f6zl\u00fcklerini ortadan kald\u0131rarak bellekten tasarruf sa\u011flayan bir s\u0131n\u0131f i\u00e7indeki bildirim. Pop\u00fcler olmas\u0131na ra\u011fmen, tekni\u011fin do\u011fru olmas\u0131 biraz zor ve en iyi, bellek a\u00e7\u0131s\u0131ndan kritik bir uygulamada \u00e7ok say\u0131da \u00f6rne\u011fin bulundu\u011fu nadir durumlar i\u00e7in ayr\u0131lm\u0131\u015ft\u0131r.</p>\n</dd>\n</main>\n"}, "dizi": {"title": "dizi", "body": "<main>\n<dd><p><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__getitem__()</span></code> \u00f6zel y\u00f6ntemi arac\u0131l\u0131\u011f\u0131yla tamsay\u0131 dizinlerini kullanarak verimli \u00f6\u011fe eri\u015fimini destekleyen ve dizinin uzunlu\u011funu d\u00f6nd\u00fcren bir <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__len__()</span></code> y\u00f6ntemini tan\u0131mlayan bir <a class=\"reference internal\" href=\"#term-iterable\"><span class=\"xref std std-term\">iterable</span></a>. Baz\u0131 yerle\u015fik dizi t\u00fcrleri \u015funlard\u0131r: <a class=\"reference internal\" href=\"library/stdtypes.html#list\" title=\"list\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference internal\" href=\"library/stdtypes.html#tuple\" title=\"tuple\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tuple</span></code></a> ve <a class=\"reference internal\" href=\"library/stdtypes.html#bytes\" title=\"bytes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a>. <a class=\"reference internal\" href=\"library/stdtypes.html#dict\" title=\"dict\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a> ayr\u0131ca <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__getitem__()</span></code> ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__len__()</span></code> \u2018i de destekledi\u011fine dikkat edin, ancak aramalar tamsay\u0131lar yerine rastgele <a class=\"reference internal\" href=\"#term-immutable\"><span class=\"xref std std-term\">immutable</span></a> anahtarlar\u0131 kulland\u0131\u011f\u0131ndan bir diziden ziyade bir e\u015fleme olarak kabul edilir.</p>\n<p><a class=\"reference internal\" href=\"library/collections.abc.html#collections.abc.Sequence\" title=\"collections.abc.Sequence\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">collections.abc.Sequence</span></code></a> soyut temel s\u0131n\u0131f\u0131;, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">count()</span></code>, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">index()</span></code>, <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__contains__()</span></code>, ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__reversed__()</span></code> ekleyerek sadece <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__getitem__()</span></code> ve <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">__len__()</span></code> \u2018in \u00f6tesine ge\u00e7en \u00e7ok daha zengin bir aray\u00fcz\u00fc tan\u0131mlar. Bu geni\u015fletilmi\u015f arabirimi uygulayan t\u00fcrler, <a class=\"reference internal\" href=\"library/abc.html#abc.ABCMeta.register\" title=\"abc.ABCMeta.register\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">register()</span></code></a> kullan\u0131larak a\u00e7\u0131k\u00e7a kaydedilebilir.</p>\n</dd>\n</main>\n"}, "anlamak": {"title": "anlamak", "body": "<main>\n<dd><p>\u00d6\u011felerin t\u00fcm\u00fcn\u00fc veya bir k\u0131sm\u0131n\u0131 yinelenebilir bir \u015fekilde i\u015flemenin ve sonu\u00e7larla birlikte bir k\u00fcme d\u00f6nd\u00fcrmenin kompakt bir yolu. <code class=\"docutils literal notranslate\"><span class=\"pre\">results</span> <span class=\"pre\">=</span> <span class=\"pre\">{c</span> <span class=\"pre\">for</span> <span class=\"pre\">c</span> <span class=\"pre\">in</span> <span class=\"pre\">'abracadabra'</span> <span class=\"pre\">if</span> <span class=\"pre\">c</span> <span class=\"pre\">not</span> <span class=\"pre\">in</span> <span class=\"pre\">'abc'}</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">{'r',</span> <span class=\"pre\">'d'}</span></code> dizelerini olu\u015fturur. Bak\u0131n\u0131z <a class=\"reference internal\" href=\"reference/expressions.html#comprehensions\"><span class=\"std std-ref\">Displays for lists, sets and dictionaries</span></a>.</p>\n</dd>\n</main>\n"}, "tek sevk": {"title": "tek sevk", "body": "<main>\n<dd><p>Uygulaman\u0131n tek bir arg\u00fcman t\u00fcr\u00fcne g\u00f6re se\u00e7ildi\u011fi bir <a class=\"reference internal\" href=\"#term-generic-function\"><span class=\"xref std std-term\">generic function</span></a> g\u00f6nderimi bi\u00e7imi.</p>\n</dd>\n</main>\n"}, "par\u00e7alamak": {"title": "par\u00e7alamak", "body": "<main>\n<dd><p>Genellikle bir <a class=\"reference internal\" href=\"#term-sequence\"><span class=\"xref std std-term\">sequence</span></a> \u2018nin bir b\u00f6l\u00fcm\u00fcn\u00fc i\u00e7eren bir nesne. Bir dilim, \u00f6rne\u011fin <code class=\"docutils literal notranslate\"><span class=\"pre\">variable_name[1:3:5]</span></code> \u2018de oldu\u011fu gibi, birka\u00e7 tane verildi\u011finde, say\u0131lar aras\u0131nda iki nokta \u00fcst \u00fcste koyarak, <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code> alt simge g\u00f6sterimi kullan\u0131larak olu\u015fturulur. K\u00f6\u015feli ayra\u00e7 (alt simge) g\u00f6sterimi, dahili olarak <a class=\"reference internal\" href=\"library/functions.html#slice\" title=\"slice\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">slice</span></code></a> nesnelerini kullan\u0131r.</p>\n</dd>\n</main>\n"}, "\u00f6zel metod": {"title": "\u00f6zel metod", "body": "<main>\n<dd><p id=\"index-34\">Toplama gibi bir t\u00fcr \u00fczerinde belirli bir i\u015flemi y\u00fcr\u00fctmek i\u00e7in Python taraf\u0131ndan \u00f6rt\u00fck olarak \u00e7a\u011fr\u0131lan bir y\u00f6ntem. Bu t\u00fcr y\u00f6ntemlerin \u00e7ift alt \u00e7izgi ile ba\u015flayan ve biten adlar\u0131 vard\u0131r. \u00d6zel y\u00f6ntemler <a class=\"reference internal\" href=\"reference/datamodel.html#specialnames\"><span class=\"std std-ref\">Special method names</span></a> i\u00e7inde belgelenmi\u015ftir.</p>\n</dd>\n</main>\n"}, "ifade (de\u011fer d\u00f6nd\u00fcrmez)": {"title": "ifade (de\u011fer d\u00f6nd\u00fcrmez)", "body": "<main>\n<dd><p>Bir ifade, bir paketin par\u00e7as\u0131d\u0131r (kod \u201cblo\u011fu\u201d). Bir ifade, bir <a class=\"reference internal\" href=\"#term-expression\"><span class=\"xref std std-term\">expression</span></a> veya <a class=\"reference internal\" href=\"reference/compound_stmts.html#if\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">if</span></code></a>, <a class=\"reference internal\" href=\"reference/compound_stmts.html#while\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">while</span></code></a> veya <a class=\"reference internal\" href=\"reference/compound_stmts.html#for\"><code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">for</span></code></a> gibi bir anahtar kelimeye sahip birka\u00e7 yap\u0131dan biridir.</p>\n</dd>\n</main>\n"}, "g\u00fc\u00e7l\u00fc referans": {"title": "g\u00fc\u00e7l\u00fc referans", "body": "<main>\n<dd><p>Python\u2019un C API\u2019sinde, g\u00fc\u00e7l\u00fc bir referans, olu\u015fturuldu\u011funda nesnenin referans say\u0131s\u0131n\u0131 art\u0131ran ve silindi\u011finde nesnenin referans say\u0131s\u0131n\u0131 azaltan bir nesneye yap\u0131lan referanst\u0131r.</p>\n<p><a class=\"reference internal\" href=\"c-api/refcounting.html#c.Py_NewRef\" title=\"Py_NewRef\"><code class=\"xref c c-func docutils literal notranslate\"><span class=\"pre\">Py_NewRef()</span></code></a> fonksiyonu, bir nesneye g\u00fc\u00e7l\u00fc bir ba\u015fvuru olu\u015fturmak i\u00e7in kullan\u0131labilir. Genellikle <a class=\"reference internal\" href=\"c-api/refcounting.html#c.Py_DECREF\" title=\"Py_DECREF\"><code class=\"xref c c-func docutils literal notranslate\"><span class=\"pre\">Py_DECREF()</span></code></a> fonksiyonu, bir referans\u0131n s\u0131zmas\u0131n\u0131 \u00f6nlemek i\u00e7in g\u00fc\u00e7l\u00fc referans kapsam\u0131ndan \u00e7\u0131kmadan \u00f6nce g\u00fc\u00e7l\u00fc referansta \u00e7a\u011fr\u0131lmal\u0131d\u0131r.</p>\n<p>Ayr\u0131ca bkz. <a class=\"reference internal\" href=\"#term-borrowed-reference\"><span class=\"xref std std-term\">\u00f6d\u00fcn\u00e7 al\u0131nan referans</span></a>.</p>\n</dd>\n</main>\n"}, "yaz\u0131 \u00e7\u00f6z\u00fcmleme": {"title": "yaz\u0131 \u00e7\u00f6z\u00fcmleme", "body": "<main>\n<dd><p>Python\u2019da bir dize, bir Unicode kod noktalar\u0131 dizisidir (<code class=\"docutils literal notranslate\"><span class=\"pre\">U+0000</span></code>\u2013<code class=\"docutils literal notranslate\"><span class=\"pre\">U+10FFFF</span></code> aral\u0131\u011f\u0131nda). Bir dizeyi depolamak veya aktarmak i\u00e7in, bir bayt dizisi olarak seri hale getirilmesi gerekir.</p>\n<p>Bir dizeyi bir bayt dizisi halinde seri hale getirmek \u201ckodlama (encoding)\u201d olarak bilinir ve dizeyi bayt dizisinden yeniden olu\u015fturmak \u201ckod \u00e7\u00f6zme (decoding)\u201d olarak bilinir.</p>\n<p>Toplu olarak \u201cmetin kodlamalar\u0131\u201d olarak adland\u0131r\u0131lan \u00e7e\u015fitli farkl\u0131 metin serile\u015ftirme <a class=\"reference internal\" href=\"library/codecs.html#standard-encodings\"><span class=\"std std-ref\">kodekleri</span></a> vard\u0131r.</p>\n</dd>\n</main>\n"}, "yaz\u0131 dosyas\u0131": {"title": "yaz\u0131 dosyas\u0131", "body": "<main>\n<dd><p>A <a class=\"reference internal\" href=\"#term-file-object\"><span class=\"xref std std-term\">file object</span></a> <a class=\"reference internal\" href=\"library/stdtypes.html#str\" title=\"str\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a> nesnelerini okuyabilir ve yazabilir. \u00c7o\u011fu zaman, bir metin dosyas\u0131 asl\u0131nda bir bayt y\u00f6nelimli veri ak\u0131\u015f\u0131na eri\u015fir ve otomatik olarak <a class=\"reference internal\" href=\"#term-text-encoding\"><span class=\"xref std std-term\">text encoding</span></a> i\u015fler. Metin dosyalar\u0131na \u00f6rnek olarak metin modunda a\u00e7\u0131lan dosyalar (<code class=\"docutils literal notranslate\"><span class=\"pre\">'r'</span></code> veya <code class=\"docutils literal notranslate\"><span class=\"pre\">'w'</span></code>), <a class=\"reference internal\" href=\"library/sys.html#sys.stdin\" title=\"sys.stdin\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.stdin</span></code></a>, <a class=\"reference internal\" href=\"library/sys.html#sys.stdout\" title=\"sys.stdout\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.stdout</span></code></a> ve <a class=\"reference internal\" href=\"library/io.html#io.StringIO\" title=\"io.StringIO\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">io.StringIO</span></code></a> \u00f6rnekleri verilebilir.</p>\n<p>Ayr\u0131ca <a class=\"reference internal\" href=\"#term-binary-file\"><span class=\"xref std std-term\">ikili dosyalar\u0131</span></a> okuyabilen ve yazabilen bir dosya nesnesi i\u00e7in <a class=\"reference internal\" href=\"#term-bytes-like-object\"><span class=\"xref std std-term\">bayt benzeri nesnelere</span></a> bak\u0131n.</p>\n</dd>\n</main>\n"}, "\u00fc\u00e7 t\u0131rnakl\u0131 dize": {"title": "\u00fc\u00e7 t\u0131rnakl\u0131 dize", "body": "<main>\n<dd><p>\u00dc\u00e7 t\u0131rnak i\u015fareti (\u201d) veya kesme i\u015fareti (\u2019) ile s\u0131n\u0131rlanan bir dize. Tek t\u0131rnakl\u0131 dizelerde bulunmayan herhangi bir i\u015flevsellik sa\u011flamasalar da, birka\u00e7 nedenden dolay\u0131 faydal\u0131d\u0131rlar. bir dizeye \u00e7\u0131k\u0131\u015fs\u0131z tek ve \u00e7ift t\u0131rnak eklemeniz gerekir ve bunlar, devam karakterini kullanmadan birden \u00e7ok sat\u0131ra yay\u0131labilir, bu da onlar\u0131 \u00f6zellikle belge dizileri yazarken kullan\u0131\u015fl\u0131 hale getirir.</p>\n</dd>\n</main>\n"}, "tip": {"title": "tip", "body": "<main>\n<dd><p>Bir Python nesnesinin t\u00fcr\u00fc, onun ne t\u00fcr bir nesne oldu\u011funu belirler; her nesnenin bir t\u00fcr\u00fc vard\u0131r. Bir nesnenin tipine <a class=\"reference internal\" href=\"library/stdtypes.html#instance.__class__\" title=\"instance.__class__\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">__class__</span></code></a> niteli\u011fi ile eri\u015filebilir veya <code class=\"docutils literal notranslate\"><span class=\"pre\">type(obj)</span></code> ile al\u0131nabilir.</p>\n</dd>\n</main>\n"}, "tip takma ad\u0131": {"title": "tip takma ad\u0131", "body": "<main>\n<dd><p>Bir tan\u0131mlay\u0131c\u0131ya t\u00fcr atanarak olu\u015fturulan, bir t\u00fcr i\u00e7in e\u015f anlaml\u0131.</p>\n<p>T\u00fcr takma adlar\u0131, <a class=\"reference internal\" href=\"#term-type-hint\"><span class=\"xref std std-term\">t\u00fcr ipu\u00e7lar\u0131n\u0131</span></a> basitle\u015ftirmek i\u00e7in kullan\u0131\u015fl\u0131d\u0131r. \u00d6rne\u011fin:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">remove_gray_shades</span><span class=\"p\">(</span>\n        <span class=\"n\">colors</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]:</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>bu \u015fekilde daha okunakl\u0131 hale getirilebilir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Color</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">remove_gray_shades</span><span class=\"p\">(</span><span class=\"n\">colors</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Color</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Color</span><span class=\"p\">]:</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Bu i\u015flevi a\u00e7\u0131klayan <a class=\"reference internal\" href=\"library/typing.html#module-typing\" title=\"typing: Support for type hints (see :pep:`484`).\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">typing</span></code></a> ve <span class=\"target\" id=\"index-107\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0484/\"><strong>PEP 484</strong></a> b\u00f6l\u00fcmlerine bak\u0131n.</p>\n</dd>\n</main>\n"}, "t\u00fcr ipucu": {"title": "t\u00fcr ipucu", "body": "<main>\n<dd><p>Bir de\u011fi\u015fken, bir s\u0131n\u0131f niteli\u011fi veya bir i\u015flev parametresi veya d\u00f6n\u00fc\u015f de\u011feri i\u00e7in beklenen t\u00fcr\u00fc belirten bir <a class=\"reference internal\" href=\"#term-annotation\"><span class=\"xref std std-term\">ek a\u00e7\u0131klama</span></a>.</p>\n<p>T\u00fcr ipu\u00e7lar\u0131 iste\u011fe ba\u011fl\u0131d\u0131r ve Python taraf\u0131ndan uygulanmaz, ancak bunlar statik tip analiz ara\u00e7lar\u0131 i\u00e7in faydal\u0131d\u0131r ve kod tamamlama ve yeniden d\u00fczenleme ile IDE\u2019lere yard\u0131mc\u0131 olur.</p>\n<p>Genel de\u011fi\u015fkenlerin, s\u0131n\u0131f \u00f6zniteliklerinin ve i\u015flevlerin t\u00fcr ipu\u00e7lar\u0131na, yerel de\u011fi\u015fkenlere de\u011fil, <a class=\"reference internal\" href=\"library/typing.html#typing.get_type_hints\" title=\"typing.get_type_hints\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">typing.get_type_hints()</span></code></a> kullan\u0131larak eri\u015filebilir.</p>\n<p>Bu i\u015flevi a\u00e7\u0131klayan <a class=\"reference internal\" href=\"library/typing.html#module-typing\" title=\"typing: Support for type hints (see :pep:`484`).\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">typing</span></code></a> ve <span class=\"target\" id=\"index-108\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0484/\"><strong>PEP 484</strong></a> b\u00f6l\u00fcmlerine bak\u0131n.</p>\n</dd>\n</main>\n"}, "evrensel yeni sat\u0131rlar": {"title": "evrensel yeni sat\u0131rlar", "body": "<main>\n<dd><p>A\u015fa\u011f\u0131dakilerin t\u00fcm\u00fcn\u00fcn bir sat\u0131r\u0131n biti\u015fi olarak kabul edildi\u011fi metin ak\u0131\u015flar\u0131n\u0131 yorumlaman\u0131n bir yolu: Unix sat\u0131r sonu kural\u0131 <code class=\"docutils literal notranslate\"><span class=\"pre\">\\n'</span></code>, Windows kural\u0131 <code class=\"docutils literal notranslate\"><span class=\"pre\">`\\r\\n'</span></code>, ve eski Macintosh kural\u0131 <code class=\"docutils literal notranslate\"><span class=\"pre\">'\\r'</span></code>. Ek bir kullan\u0131m i\u00e7in <span class=\"target\" id=\"index-109\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0278/\"><strong>PEP 278</strong></a> ve <span class=\"target\" id=\"index-110\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-3116/\"><strong>PEP 3116</strong></a> ve ayr\u0131ca <a class=\"reference internal\" href=\"library/stdtypes.html#bytes.splitlines\" title=\"bytes.splitlines\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">bytes.splitlines()</span></code></a> bak\u0131n.</p>\n</dd>\n</main>\n"}, "de\u011fi\u015fken a\u00e7\u0131klama": {"title": "de\u011fi\u015fken a\u00e7\u0131klama", "body": "<main>\n<dd><p>Bir de\u011fi\u015fkenin veya bir s\u0131n\u0131f \u00f6zniteli\u011finin <a class=\"reference internal\" href=\"#term-annotation\"><span class=\"xref std std-term\">ek a\u00e7\u0131klamas\u0131</span></a>.</p>\n<p>Bir de\u011fi\u015fkene veya s\u0131n\u0131f niteli\u011fine a\u00e7\u0131klama eklerken atama iste\u011fe ba\u011fl\u0131d\u0131r:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"s1\">&#39;annotation&#39;</span>\n</pre></div>\n</div>\n<p>De\u011fi\u015fken a\u00e7\u0131klamalar\u0131 genellikle <a class=\"reference internal\" href=\"#term-type-hint\"><span class=\"xref std std-term\">t\u00fcr ipu\u00e7lar\u0131</span></a> i\u00e7in kullan\u0131l\u0131r: \u00f6rne\u011fin, bu de\u011fi\u015fkenin <a class=\"reference internal\" href=\"library/functions.html#int\" title=\"int\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">int</span></code></a> de\u011ferlerini almas\u0131 beklenir:</p>\n<div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n</pre></div>\n</div>\n<p>De\u011fi\u015fken a\u00e7\u0131klama s\u00f6zdizimi <a class=\"reference internal\" href=\"reference/simple_stmts.html#annassign\"><span class=\"std std-ref\">Annotated assignment statements</span></a> b\u00f6l\u00fcm\u00fcnde a\u00e7\u0131klanm\u0131\u015ft\u0131r.</p>\n<p>Bu i\u015flevi a\u00e7\u0131klayan; <a class=\"reference internal\" href=\"#term-function-annotation\"><span class=\"xref std std-term\">function annotation</span></a>, <span class=\"target\" id=\"index-111\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0484/\"><strong>PEP 484</strong></a> ve <span class=\"target\" id=\"index-112\"></span><a class=\"pep reference external\" href=\"https://peps.python.org/pep-0526/\"><strong>PEP 526</strong></a> b\u00f6l\u00fcmlerine bak\u0131n. Ek a\u00e7\u0131klamalarla \u00e7al\u0131\u015fmaya ili\u015fkin en iyi uygulamalar i\u00e7in ayr\u0131ca bkz. <a class=\"reference internal\" href=\"howto/annotations.html#annotations-howto\"><span class=\"std std-ref\">Annotations Best Practices</span></a>.</p>\n</dd>\n</main>\n"}, "sanal ortam": {"title": "sanal ortam", "body": "<main>\n<dd><p>Python kullan\u0131c\u0131lar\u0131n\u0131n ve uygulamalar\u0131n\u0131n, ayn\u0131 sistem \u00fczerinde \u00e7al\u0131\u015fan di\u011fer Python uygulamalar\u0131n\u0131n davran\u0131\u015f\u0131na m\u00fcdahale etmeden Python da\u011f\u0131t\u0131m paketlerini kurmas\u0131na ve y\u00fckseltmesine olanak tan\u0131yan, i\u015fbirli\u011fi i\u00e7inde yal\u0131t\u0131lm\u0131\u015f bir \u00e7al\u0131\u015fma zaman\u0131 ortam\u0131.</p>\n<p>Ayr\u0131ca bak\u0131n\u0131z <a class=\"reference internal\" href=\"library/venv.html#module-venv\" title=\"venv: Creation of virtual environments.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">venv</span></code></a>.</p>\n</dd>\n</main>\n"}, "sanal makine": {"title": "sanal makine", "body": "<main>\n<dd><p>Tamamen yaz\u0131l\u0131mla tan\u0131mlanm\u0131\u015f bir bilgisayar. Python\u2019un sanal makinesi, bayt kodu derleyicisi taraf\u0131ndan yay\u0131nlanan <a class=\"reference internal\" href=\"#term-bytecode\"><span class=\"xref std std-term\">bytecode</span></a> \u2018u \u00e7al\u0131\u015ft\u0131r\u0131r.</p>\n</dd>\n</main>\n"}, "python\u2019un zen\u2019i": {"title": "Python\u2019un Zen\u2019i", "body": "<main>\n<dd><p>Dili anlamaya ve kullanmaya yard\u0131mc\u0131 olan Python tasar\u0131m ilkeleri ve felsefelerinin listesi. Liste, etkile\u015fimli komut isteminde \u201c<code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">this</span></code>\u201d yazarak bulunabilir.</p>\n</dd>\n</main>\n"}}